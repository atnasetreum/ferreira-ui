[{"/home/eduardo/proyects/ferreira/ferreira-ui/pages/_app.tsx":"1","/home/eduardo/proyects/ferreira/ferreira-ui/pages/_document.tsx":"2","/home/eduardo/proyects/ferreira/ferreira-ui/pages/camionetas/index.tsx":"3","/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/Orders.tsx":"4","/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/Title.tsx":"5","/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/index.tsx":"6","/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/listItems.tsx":"7","/home/eduardo/proyects/ferreira/ferreira-ui/pages/index.tsx":"8","/home/eduardo/proyects/ferreira/ferreira-ui/pages/logisticas/index.tsx":"9","/home/eduardo/proyects/ferreira/ferreira-ui/pages/reportes/index.tsx":"10","/home/eduardo/proyects/ferreira/ferreira-ui/pages/rutas/index.tsx":"11","/home/eduardo/proyects/ferreira/ferreira-ui/pages/sellers/index.tsx":"12","/home/eduardo/proyects/ferreira/ferreira-ui/pages/users/index.tsx":"13","/home/eduardo/proyects/ferreira/ferreira-ui/components/camionetas/FormCamionetas.tsx":"14","/home/eduardo/proyects/ferreira/ferreira-ui/components/camionetas/TableCamionetas.tsx":"15","/home/eduardo/proyects/ferreira/ferreira-ui/components/dashboard/CarsByLogistics.tsx":"16","/home/eduardo/proyects/ferreira/ferreira-ui/components/login/SelectUsers.tsx":"17","/home/eduardo/proyects/ferreira/ferreira-ui/components/login/index.ts":"18","/home/eduardo/proyects/ferreira/ferreira-ui/components/logisticas/FormLogisticas.tsx":"19","/home/eduardo/proyects/ferreira/ferreira-ui/components/logisticas/TableLogisticas.tsx":"20","/home/eduardo/proyects/ferreira/ferreira-ui/components/reportes/PdfReporte.tsx":"21","/home/eduardo/proyects/ferreira/ferreira-ui/components/reportes/TableReportes.tsx":"22","/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FiltersOptsRoutes.tsx":"23","/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FormRutas/FormRutas.tsx":"24","/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FormRutas/TablePuntos.tsx":"25","/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/TableRutas.tsx":"26","/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/pdf/PdfRoute.tsx":"27","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/FiltersOptsSellers.tsx":"28","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/FormSeller.tsx":"29","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/TableSellers.tsx":"30","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/TabsSeller.tsx":"31","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/DetailsSeller.tsx":"32","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/DetailsTabsSeller.tsx":"33","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/GeneralInfo.tsx":"34","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/ListSucursales.tsx":"35","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/ReferenciasInfo.tsx":"36","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/TelefonosInfo.tsx":"37","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/general/FormGeneral.tsx":"38","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/EditReferencia.tsx":"39","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/FormReferencias.tsx":"40","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/TableReferencias.tsx":"41","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/EditReferenciaTelefonica.tsx":"42","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/FormTelefonos.tsx":"43","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/TableTelefonos.tsx":"44","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/Copyright.tsx":"45","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectCiudades.tsx":"46","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectDrivers.tsx":"47","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectEstados.tsx":"48","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectLogisticas.tsx":"49","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectMunicipios.tsx":"50","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectPlacas.tsx":"51","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectSellers.tsx":"52","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectTypeUsers.tsx":"53","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/index.ts":"54","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/tables/TableContainerCustom.tsx":"55","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/tables/TableFooterCustom.tsx":"56","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/tables/TableHeadCustom.tsx":"57","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/tables/TablePaginationActions.tsx":"58","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/tables/TableStyle.ts":"59","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/tables/index.ts":"60","/home/eduardo/proyects/ferreira/ferreira-ui/components/users/FormUsers.tsx":"61","/home/eduardo/proyects/ferreira/ferreira-ui/components/users/TableUsers.tsx":"62"},{"size":679,"mtime":1673055562388,"results":"63","hashOfConfig":"64"},{"size":390,"mtime":1671485171855,"results":"65","hashOfConfig":"64"},{"size":2157,"mtime":1675108140222,"results":"66","hashOfConfig":"64"},{"size":2354,"mtime":1672959812423,"results":"67","hashOfConfig":"64"},{"size":324,"mtime":1671485844609,"results":"68","hashOfConfig":"64"},{"size":1206,"mtime":1676386027801,"results":"69","hashOfConfig":"64"},{"size":2792,"mtime":1673387083519,"results":"70","hashOfConfig":"64"},{"size":3207,"mtime":1675369670443,"results":"71","hashOfConfig":"64"},{"size":2157,"mtime":1675107103401,"results":"72","hashOfConfig":"64"},{"size":4961,"mtime":1675217430681,"results":"73","hashOfConfig":"64"},{"size":2975,"mtime":1676924131376,"results":"74","hashOfConfig":"64"},{"size":3182,"mtime":1675090976817,"results":"75","hashOfConfig":"64"},{"size":1666,"mtime":1674157874730,"results":"76","hashOfConfig":"64"},{"size":5318,"mtime":1675137276822,"results":"77","hashOfConfig":"64"},{"size":3066,"mtime":1677169642294,"results":"78","hashOfConfig":"64"},{"size":1783,"mtime":1676385979608,"results":"79","hashOfConfig":"64"},{"size":1603,"mtime":1673531995136,"results":"80","hashOfConfig":"64"},{"size":31,"mtime":1673052518327,"results":"81","hashOfConfig":"64"},{"size":3059,"mtime":1675137258925,"results":"82","hashOfConfig":"64"},{"size":2965,"mtime":1677169642294,"results":"83","hashOfConfig":"64"},{"size":4855,"mtime":1675218834740,"results":"84","hashOfConfig":"64"},{"size":4487,"mtime":1675215890617,"results":"85","hashOfConfig":"64"},{"size":2544,"mtime":1675126342313,"results":"86","hashOfConfig":"64"},{"size":7329,"mtime":1676928328371,"results":"87","hashOfConfig":"64"},{"size":6341,"mtime":1674762231845,"results":"88","hashOfConfig":"64"},{"size":7207,"mtime":1677169642294,"results":"89","hashOfConfig":"64"},{"size":6662,"mtime":1676929324417,"results":"90","hashOfConfig":"64"},{"size":3118,"mtime":1676381874356,"results":"91","hashOfConfig":"64"},{"size":7339,"mtime":1675137514082,"results":"92","hashOfConfig":"64"},{"size":3892,"mtime":1677169687014,"results":"93","hashOfConfig":"64"},{"size":3113,"mtime":1674912179448,"results":"94","hashOfConfig":"64"},{"size":2215,"mtime":1674089528028,"results":"95","hashOfConfig":"64"},{"size":3193,"mtime":1674913030076,"results":"96","hashOfConfig":"64"},{"size":4123,"mtime":1674610614372,"results":"97","hashOfConfig":"64"},{"size":1873,"mtime":1674169053689,"results":"98","hashOfConfig":"64"},{"size":1902,"mtime":1674169000888,"results":"99","hashOfConfig":"64"},{"size":1393,"mtime":1674912769015,"results":"100","hashOfConfig":"64"},{"size":7513,"mtime":1675127467691,"results":"101","hashOfConfig":"64"},{"size":4769,"mtime":1674613208308,"results":"102","hashOfConfig":"64"},{"size":3456,"mtime":1674612238806,"results":"103","hashOfConfig":"64"},{"size":8468,"mtime":1675103202500,"results":"104","hashOfConfig":"64"},{"size":2359,"mtime":1674567566801,"results":"105","hashOfConfig":"64"},{"size":2210,"mtime":1674567277041,"results":"106","hashOfConfig":"64"},{"size":7319,"mtime":1674690411499,"results":"107","hashOfConfig":"64"},{"size":648,"mtime":1673052294848,"results":"108","hashOfConfig":"64"},{"size":1034,"mtime":1674242096985,"results":"109","hashOfConfig":"64"},{"size":932,"mtime":1675090799177,"results":"110","hashOfConfig":"64"},{"size":774,"mtime":1674242059084,"results":"111","hashOfConfig":"64"},{"size":957,"mtime":1675116914690,"results":"112","hashOfConfig":"64"},{"size":992,"mtime":1674242087069,"results":"113","hashOfConfig":"64"},{"size":970,"mtime":1675125585772,"results":"114","hashOfConfig":"64"},{"size":1245,"mtime":1674684303314,"results":"115","hashOfConfig":"64"},{"size":1066,"mtime":1674146074246,"results":"116","hashOfConfig":"64"},{"size":292,"mtime":1676389774040,"results":"117","hashOfConfig":"64"},{"size":1694,"mtime":1676390802798,"results":"118","hashOfConfig":"64"},{"size":1280,"mtime":1676387079287,"results":"119","hashOfConfig":"64"},{"size":446,"mtime":1676387079287,"results":"120","hashOfConfig":"64"},{"size":2537,"mtime":1676387079287,"results":"121","hashOfConfig":"64"},{"size":659,"mtime":1676387079287,"results":"122","hashOfConfig":"64"},{"size":184,"mtime":1676389753427,"results":"123","hashOfConfig":"64"},{"size":2747,"mtime":1674157236132,"results":"124","hashOfConfig":"64"},{"size":1504,"mtime":1677174475918,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q4euyy",{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255"},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","suppressedMessages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/eduardo/proyects/ferreira/ferreira-ui/pages/_app.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/_document.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/camionetas/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/Orders.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/Title.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/listItems.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/logisticas/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/reportes/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/rutas/index.tsx",["320"],[],"import { Button, ButtonGroup } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { useEffect, useState } from \"react\";\nimport FormRutas from \"../../components/rutas/FormRutas/FormRutas\";\nimport TableRutas from \"../../components/rutas/TableRutas\";\nimport MainLayout from \"../../layouts/MainLayout\";\nimport ForkRightIcon from \"@mui/icons-material/ForkRight\";\nimport { Camioneta, Logistica, Route } from \"../../ts/interfaces\";\nimport FiltersOptsRoutes from \"../../components/rutas/FiltersOptsRoutes\";\nimport { Driver } from \"../../components/ui\";\nimport { RouteApi } from \"../../utils/api\";\n\nexport interface FiltersRoute {\n  id: string;\n  date: Date | null;\n  logistica: Logistica | null;\n  placa: Camioneta | null;\n  driver: Driver | null;\n}\n\nfunction RutasPage() {\n  const [action, setAction] = useState<string>(\"\");\n  const [routeSelected, setRouteSelected] = useState<Route>({} as Route);\n  const [filters, setFilters] = useState<FiltersRoute>({\n    id: \"\",\n    date: new Date(),\n    driver: null,\n    logistica: null,\n    placa: null,\n  });\n  const [routes, setRoutes] = useState<Route[]>([]);\n\n  const getAllRoutes = () =>\n    RouteApi.getAll({\n      ...(filters.id && { id: filters.id }),\n      ...(filters.date && { date: filters.date }),\n      ...(filters.driver && { driverId: filters.driver.id }),\n      ...(filters.placa && { carId: filters.placa.id }),\n      ...(filters.logistica && { logisticaId: filters.logistica.id }),\n    }).then(setRoutes);\n\n  useEffect(() => {\n    getAllRoutes();\n  }, [filters]);\n\n  return (\n    <MainLayout title=\"Rutas\">\n      <Grid container spacing={1}>\n        {action === \"\" && (\n          <Grid item xs={12} md={12} lg={12}>\n            <ButtonGroup\n              variant=\"contained\"\n              aria-label=\"outlined primary button group\"\n            >\n              <Button\n                startIcon={<ForkRightIcon />}\n                onClick={() => setAction(\"add\")}\n              >\n                Agregar\n              </Button>\n            </ButtonGroup>\n          </Grid>\n        )}\n        {[\"add\", \"edit\"].includes(action) && (\n          <Grid item xs={12} md={12} lg={12}>\n            <FormRutas\n              setAction={setAction}\n              routeSelected={routeSelected}\n              setRouteSelected={setRouteSelected}\n              getAllRoutes={getAllRoutes}\n            />\n          </Grid>\n        )}\n        {action === \"\" && (\n          <>\n            <Grid item xs={12} md={12} lg={12}>\n              <FiltersOptsRoutes filters={filters} setFilters={setFilters} />\n            </Grid>\n            <Grid item xs={12} md={12} lg={12}>\n              <TableRutas\n                filters={filters}\n                setAction={setAction}\n                setRouteSelected={setRouteSelected}\n                routes={routes}\n                getAllRoutes={getAllRoutes}\n              />\n            </Grid>\n          </>\n        )}\n      </Grid>\n    </MainLayout>\n  );\n}\n\nexport default RutasPage;\n","/home/eduardo/proyects/ferreira/ferreira-ui/pages/sellers/index.tsx",["321"],[],"import Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport FormSeller from \"../../components/sellers/FormSeller\";\nimport TableSellers from \"../../components/sellers/TableSellers\";\nimport MainLayout from \"../../layouts/MainLayout\";\nimport { useEffect, useState } from \"react\";\nimport { SellerApi } from \"../../utils/api\";\nimport { Seller } from \"../../ts/interfaces\";\nimport DetailsSeller from \"../../components/sellers/details/DetailsSeller\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport PersonAddAlt1Icon from \"@mui/icons-material/PersonAddAlt1\";\nimport { useFilters } from \"../../hooks\";\nimport FiltersOptsSellers from \"../../components/sellers/FiltersOptsSellers\";\n\nexport interface FiltersSellers {\n  id: string;\n  uuid: string;\n  nombre: string;\n  personaQueAtiende: string;\n  estado: string | null;\n  municipio: string | null;\n  ciudad: string | null;\n}\n\nconst filtersInit = {\n  id: \"\",\n  uuid: \"\",\n  nombre: \"\",\n  personaQueAtiende: \"\",\n  estado: null,\n  municipio: null,\n  ciudad: null,\n};\n\nfunction SellersPage() {\n  const [action, setAction] = useState<string>(\"\");\n  const [sellers, setSellers] = useState<Seller[]>([]);\n  const [sellerSelected, setSellerSelected] = useState<Seller>({} as Seller);\n  const { filters, setFilters, querystring } =\n    useFilters<FiltersSellers>(filtersInit);\n\n  const getSellers = () => {\n    SellerApi.getAll(querystring).then(setSellers);\n  };\n\n  useEffect(() => {\n    getSellers();\n  }, [querystring]);\n\n  return (\n    <MainLayout title=\"Sellers\">\n      {action === \"\" && (\n        <DetailsSeller\n          sellerSelected={sellerSelected}\n          setSellerSelected={setSellerSelected}\n        />\n      )}\n      <Grid container spacing={1}>\n        {action === \"\" && (\n          <Grid item xs={12} md={12} lg={12}>\n            <ButtonGroup\n              variant=\"contained\"\n              aria-label=\"outlined primary button group\"\n            >\n              <Button\n                startIcon={<PersonAddAlt1Icon />}\n                onClick={() => setAction(\"add\")}\n              >\n                Agregar\n              </Button>\n            </ButtonGroup>\n          </Grid>\n        )}\n        {[\"add\", \"edit\"].includes(action) && (\n          <Grid item xs={12} md={12} lg={12}>\n            <Paper sx={{ p: 2 }}>\n              <FormSeller\n                sellerSelected={sellerSelected}\n                getSellers={getSellers}\n                closeForm={() => {\n                  setSellerSelected({} as Seller);\n                  setAction(\"\");\n                }}\n              />\n            </Paper>\n          </Grid>\n        )}\n        {action === \"\" && (\n          <>\n            <Grid item xs={12} md={12} lg={12}>\n              <FiltersOptsSellers filters={filters} setFilters={setFilters} />\n            </Grid>\n            <Grid item xs={12} md={12} lg={12}>\n              <TableSellers\n                sellers={sellers}\n                setSellerSelected={setSellerSelected}\n                setAction={setAction}\n                getSellers={getSellers}\n              />\n            </Grid>\n          </>\n        )}\n      </Grid>\n    </MainLayout>\n  );\n}\n\nexport default SellersPage;\n","/home/eduardo/proyects/ferreira/ferreira-ui/pages/users/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/camionetas/FormCamionetas.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/camionetas/TableCamionetas.tsx",["322"],[],"import * as React from \"react\";\nimport { StyledTableCell, StyledTableRow } from \"../ui\";\nimport { Camioneta } from \"../../ts/interfaces\";\nimport { formatTimeStamp } from \"../../utils/dates\";\nimport { ButtonGroup, IconButton } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { CamionetaApi } from \"../../utils/api\";\nimport { useNotify } from \"../../hooks\";\nimport TableContainerCustom from \"../ui/tables/TableContainerCustom\";\n\ninterface Props {\n  camionetas: Camioneta[];\n  getCamionetas: () => void;\n  setCamionetaSelected: (camioneta: Camioneta) => void;\n  setAction: (action: string) => void;\n}\n\nfunction TableLogisticas({\n  camionetas,\n  getCamionetas,\n  setCamionetaSelected,\n  setAction,\n}: Props) {\n  const { notify } = useNotify();\n  return (\n    <TableContainerCustom\n      rows={camionetas}\n<<<<<<< HEAD\n      columns={[\"ID\", \"Placa\", \"Logistica\", \"Acciones\"]}\n=======\n      columns={[\n        \"ID\",\n        \"Placa\",\n        \"Logistica\",\n        \"Fecha Creacion\",\n        \"Fecha de ultima actualizacion\",\n        \"Acciones\",\n      ]}\n>>>>>>> 63e89b2a9d4c34cc42a7614dfd722c2f90d550c6\n      renderListItem={(camioneta) => (\n        <StyledTableRow\n          key={camioneta.id}\n          sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n        >\n          <StyledTableCell component=\"th\" scope=\"row\">\n            {camioneta.id}\n          </StyledTableCell>\n          <StyledTableCell>{camioneta.placa}</StyledTableCell>\n          <StyledTableCell>{camioneta.logistica.name}</StyledTableCell>\n          <StyledTableCell>\n<<<<<<< HEAD\n=======\n            {formatTimeStamp(camioneta.createdAt)}\n          </StyledTableCell>\n          <StyledTableCell>\n            {formatTimeStamp(camioneta.updatedAt)}\n          </StyledTableCell>\n          <StyledTableCell>\n>>>>>>> 63e89b2a9d4c34cc42a7614dfd722c2f90d550c6\n            <ButtonGroup aria-label=\"outlined primary button group\">\n              <IconButton\n                color=\"warning\"\n                aria-label=\"update row\"\n                component=\"label\"\n                onClick={() => {\n                  setAction(\"edit\");\n                  setCamionetaSelected(camioneta);\n                }}\n              >\n                <EditIcon />\n              </IconButton>\n              <IconButton\n                color=\"error\"\n                aria-label=\"delete row\"\n                component=\"label\"\n                onClick={() =>\n                  CamionetaApi.remove(camioneta.id)\n                    .then(() => {\n                      notify(\"Placa eliminada correctamente\", \"success\");\n                      getCamionetas();\n                    })\n                    .catch((err) =>\n                      notify(err.response?.data?.message || err.message)\n                    )\n                }\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ButtonGroup>\n          </StyledTableCell>\n        </StyledTableRow>\n      )}\n    />\n  );\n}\n\nexport default TableLogisticas;\n","/home/eduardo/proyects/ferreira/ferreira-ui/components/dashboard/CarsByLogistics.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/login/SelectUsers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/login/index.ts",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/logisticas/FormLogisticas.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/logisticas/TableLogisticas.tsx",["323"],[],"import * as React from \"react\";\nimport { StyledTableCell, StyledTableRow } from \"../ui\";\nimport { Logistica } from \"../../ts/interfaces\";\nimport { formatTimeStamp } from \"../../utils/dates\";\nimport { ButtonGroup, IconButton } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { LogisticaApi } from \"../../utils/api\";\nimport { useNotify } from \"../../hooks\";\nimport TableContainerCustom from \"../ui/tables/TableContainerCustom\";\n\ninterface Props {\n  logisticas: Logistica[];\n  getLogisticas: () => void;\n  setLogisticaSelected: (logistica: Logistica) => void;\n  setAction: (action: string) => void;\n}\n\nfunction TableLogisticas({\n  logisticas,\n  getLogisticas,\n  setLogisticaSelected,\n  setAction,\n}: Props) {\n  const { notify } = useNotify();\n  return (\n    <TableContainerCustom\n      rows={logisticas}\n<<<<<<< HEAD\n      columns={[\"ID\", \"Nombre\", \"Acciones\"]}\n=======\n      columns={[\n        \"ID\",\n        \"Nombre\",\n        \"Fecha Creacion\",\n        \"Fecha de ultima actualizacion\",\n        \"Acciones\",\n      ]}\n>>>>>>> 63e89b2a9d4c34cc42a7614dfd722c2f90d550c6\n      renderListItem={(logistica) => (\n        <StyledTableRow\n          key={logistica.id}\n          sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n        >\n          <StyledTableCell component=\"th\" scope=\"row\">\n            {logistica.id}\n          </StyledTableCell>\n          <StyledTableCell>{logistica.name}</StyledTableCell>\n          <StyledTableCell>\n<<<<<<< HEAD\n=======\n            {formatTimeStamp(logistica.createdAt)}\n          </StyledTableCell>\n          <StyledTableCell>\n            {formatTimeStamp(logistica.updatedAt)}\n          </StyledTableCell>\n          <StyledTableCell>\n>>>>>>> 63e89b2a9d4c34cc42a7614dfd722c2f90d550c6\n            <ButtonGroup aria-label=\"outlined primary button group\">\n              <IconButton\n                color=\"warning\"\n                aria-label=\"update row\"\n                component=\"label\"\n                onClick={() => {\n                  setAction(\"edit\");\n                  setLogisticaSelected(logistica);\n                }}\n              >\n                <EditIcon />\n              </IconButton>\n              <IconButton\n                color=\"error\"\n                aria-label=\"delete row\"\n                component=\"label\"\n                onClick={() =>\n                  LogisticaApi.remove(logistica.id)\n                    .then(() => {\n                      notify(\"Logistica eliminada correctamente\", \"success\");\n                      getLogisticas();\n                    })\n                    .catch((err) =>\n                      notify(err.response?.data?.message || err.message)\n                    )\n                }\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ButtonGroup>\n          </StyledTableCell>\n        </StyledTableRow>\n      )}\n    />\n  );\n}\n\nexport default TableLogisticas;\n","/home/eduardo/proyects/ferreira/ferreira-ui/components/reportes/PdfReporte.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/reportes/TableReportes.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FiltersOptsRoutes.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FormRutas/FormRutas.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FormRutas/TablePuntos.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/TableRutas.tsx",["324"],[],"import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableHead from \"@mui/material/TableHead\";\nimport Typography from \"@mui/material/Typography\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport { StyledTableCell, StyledTableRow } from \"../ui\";\nimport { RouteApi } from \"../../utils/api\";\nimport { Route } from \"../../ts/interfaces\";\nimport { formatDate, formatTimeStamp } from \"../../utils/dates\";\nimport Link from \"next/link\";\nimport PictureAsPdfIcon from \"@mui/icons-material/PictureAsPdf\";\nimport PdfRoute from \"./pdf/PdfRoute\";\nimport { ButtonGroup } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useNotify } from \"../../hooks\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport { saveAs } from \"file-saver\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { FiltersRoute } from \"../../pages/rutas\";\nimport { formatter } from \"../../utils/numbers\";\nimport TableContainerCustom from \"../ui/tables/TableContainerCustom\";\n\ninterface PropsRow {\n  setAction: (action: string) => void;\n  row: Route;\n  removeRoute: (id: number) => void;\n  setRouteSelected: (route: Route) => void;\n}\n\nfunction Row(props: PropsRow) {\n  const { row, removeRoute, setAction, setRouteSelected } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const createPdf = async (fileName: string) => {\n    const blob = await pdf(<PdfRoute route={row} />).toBlob();\n    saveAs(blob, fileName);\n  };\n\n  return (\n    <React.Fragment>\n      <StyledTableRow sx={{ \"& > *\": { borderBottom: \"unset\" } }}>\n        <StyledTableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n        <StyledTableCell component=\"th\" scope=\"row\">\n          {row.id}\n        </StyledTableCell>\n        <StyledTableCell>{row.car.logistica.name}</StyledTableCell>\n        <StyledTableCell>{row.car.placa}</StyledTableCell>\n        <StyledTableCell>{formatDate(row.date)}</StyledTableCell>\n        <StyledTableCell>{row.user.name}</StyledTableCell>\n        <StyledTableCell>{row.sellers.length}</StyledTableCell>\n        <StyledTableCell>{row.ciclo}</StyledTableCell>\n        <StyledTableCell>{formatter.format(Number(row.pago))}</StyledTableCell>\n<<<<<<< HEAD\n        <StyledTableCell>\n=======\n        <StyledTableCell>{formatTimeStamp(row.createdAt)}</StyledTableCell>\n        <StyledTableCell>{formatTimeStamp(row.updatedAt)}</StyledTableCell>\n        <StyledTableCell align=\"center\">\n>>>>>>> 63e89b2a9d4c34cc42a7614dfd722c2f90d550c6\n          <ButtonGroup aria-label=\"outlined primary button group\">\n            <IconButton\n              color=\"error\"\n              aria-label=\"delete row\"\n              component=\"label\"\n              onClick={() =>\n                createPdf(\n                  `${formatDate(row.date)} - ${row.user.name} - Ciclo ${\n                    row.ciclo\n                  }.pdf`\n                )\n              }\n            >\n              <PictureAsPdfIcon color=\"error\" />\n            </IconButton>\n            <IconButton\n              color=\"warning\"\n              aria-label=\"delete row\"\n              component=\"label\"\n              onClick={() => {\n                setRouteSelected(row);\n                setAction(\"edit\");\n              }}\n            >\n              <EditIcon />\n            </IconButton>\n            <IconButton\n              color=\"error\"\n              aria-label=\"delete row\"\n              component=\"label\"\n              onClick={() => removeRoute(row.id)}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </ButtonGroup>\n        </StyledTableCell>\n      </StyledTableRow>\n      <StyledTableRow>\n        <StyledTableCell\n          style={{ paddingBottom: 0, paddingTop: 0 }}\n<<<<<<< HEAD\n          colSpan={10}\n=======\n          colSpan={12}\n>>>>>>> 63e89b2a9d4c34cc42a7614dfd722c2f90d550c6\n        >\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 1 }}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Puntos\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <StyledTableRow>\n                    <StyledTableCell>Punto</StyledTableCell>\n                    <StyledTableCell>UUID</StyledTableCell>\n                    <StyledTableCell>NOMBRE</StyledTableCell>\n                    <StyledTableCell>UBICACION</StyledTableCell>\n                  </StyledTableRow>\n                </TableHead>\n                <TableBody>\n                  {row.sellers.map((seller, idx) => (\n                    <StyledTableRow key={seller.id}>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        {idx + 1}\n                      </StyledTableCell>\n                      <StyledTableCell>{seller.seller.uuid}</StyledTableCell>\n                      <StyledTableCell>{seller.seller.nombre}</StyledTableCell>\n                      <StyledTableCell>\n                        <Link\n                          href={seller.seller.linkUbicacion}\n                          target=\"_blank\"\n                        >\n                          {seller.seller.linkUbicacion}\n                        </Link>\n                      </StyledTableCell>\n                    </StyledTableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </StyledTableCell>\n      </StyledTableRow>\n    </React.Fragment>\n  );\n}\n\ninterface Props {\n  setAction: (action: string) => void;\n  setRouteSelected: (route: Route) => void;\n  filters: FiltersRoute;\n  routes: Route[];\n  getAllRoutes: () => void;\n}\n\nfunction TableRutas({\n  setAction,\n  setRouteSelected,\n  filters,\n  routes,\n  getAllRoutes,\n}: Props) {\n  const { notify } = useNotify();\n\n  const removeRoute = (id: number) => {\n    RouteApi.remove(id)\n      .then(() => {\n        getAllRoutes();\n        notify(\"Ruta eliminada correctamente\", \"success\");\n      })\n      .catch((err) => notify(err.response?.data?.message || err.message));\n  };\n\n  return (\n    <TableContainerCustom\n      rows={routes}\n      columns={[\n        \"\",\n        \"ID\",\n        \"Logistica\",\n        \"Placa\",\n        \"Fecha de ruta\",\n        \"Driver\",\n        \"No. de puntos\",\n        \"Ciclo\",\n        \"Pago\",\n<<<<<<< HEAD\n=======\n        \"Fecha Creacion\",\n        \"Ultima actualizacion\",\n>>>>>>> 63e89b2a9d4c34cc42a7614dfd722c2f90d550c6\n        \"Acciones\",\n      ]}\n      renderListItem={(route) => (\n        <Row\n          key={route.id}\n          row={route}\n          removeRoute={removeRoute}\n          setAction={setAction}\n          setRouteSelected={setRouteSelected}\n        />\n      )}\n    />\n  );\n}\n\nexport default TableRutas;\n","/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/pdf/PdfRoute.tsx",["325","326","327"],[],"import React from \"react\";\nimport {\n  Document,\n  Font,\n  Page,\n  Text,\n  Image,\n  StyleSheet,\n  Link,\n  View,\n} from \"@react-pdf/renderer\";\nimport { Route } from \"../../../ts/interfaces\";\nimport { formatDate, formatTimeStamp } from \"../../../utils/dates\";\nimport { createUrlImage } from \"../../../utils/images\";\n\nconst styles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 65,\n    paddingHorizontal: 35,\n  },\n  title: {\n    fontSize: 18,\n    textAlign: \"center\",\n    fontFamily: \"Oswald\",\n  },\n  author: {\n    fontSize: 12,\n    textAlign: \"center\",\n    marginBottom: 20,\n  },\n  subtitle: {\n    fontSize: 15,\n    margin: 2,\n    fontFamily: \"Oswald\",\n  },\n  subtitleLarge: {\n    fontSize: 20,\n    margin: 2,\n    fontFamily: \"Oswald\",\n  },\n  text: {\n    margin: 12,\n    fontSize: 14,\n    textAlign: \"justify\",\n    fontFamily: \"Times-Roman\",\n  },\n  image: {\n    marginHorizontal: 120,\n    width: 280,\n    height: 200,\n  },\n  imageQr: {\n    marginHorizontal: 150,\n    width: 250,\n    height: 150,\n  },\n  imageRef: {\n    marginHorizontal: 50,\n    width: 250,\n    height: 150,\n  },\n  header: {\n    fontSize: 12,\n    marginBottom: 5,\n    textAlign: \"center\",\n    color: \"grey\",\n  },\n  pageNumber: {\n    position: \"absolute\",\n    fontSize: 12,\n    bottom: 30,\n    left: 0,\n    right: 0,\n    textAlign: \"center\",\n    color: \"grey\",\n  },\n  link: {\n    fontFamily: \"Lato\",\n    fontSize: 10,\n    color: \"black\",\n    textDecoration: \"none\",\n    alignSelf: \"flex-end\",\n    justifySelf: \"flex-end\",\n  },\n});\n\nFont.register({\n  family: \"Oswald\",\n  src: \"https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf\",\n});\n\nconst Subtitle = (props: any) => {\n  const { children, ...others } = props;\n  return (\n    <Text style={styles.subtitle} {...others}>\n      {children}\n    </Text>\n  );\n};\n\nconst PdfRoute = ({ route }: { route: Route }) => {\n  return (\n    <Document>\n      <Page size=\"A4\" style={styles.body} wrap>\n        <Text style={styles.header} fixed>\n          {`~ Ruta  ~`}\n        </Text>\n        <Text style={styles.header} fixed>\n          {route.user.name} - {formatDate(route.date)}\n        </Text>\n        <Subtitle>Driver</Subtitle>\n        <Text style={styles.text}>{route.user.name}</Text>\n        <Subtitle>No. de puntos en la ruta</Subtitle>\n        <Text style={styles.text}>{route.sellers.length}</Text>\n        <Subtitle>Ciclo</Subtitle>\n        <Text style={styles.text}>{route.ciclo}</Text>\n        <Subtitle>Fecha de la ruta</Subtitle>\n        <Text style={styles.text}>{formatDate(route.date)}</Text>\n        <Subtitle>Nota:</Subtitle>\n        <Text style={styles.text}>{route.notes}</Text>\n        <Subtitle>Logistica:</Subtitle>\n        <Text style={styles.text}>{route.car.logistica.name}</Text>\n        <Subtitle>Placa:</Subtitle>\n        <Text style={styles.text}>{route.car.placa}</Text>\n        <Image\n          style={styles.imageQr}\n          src={createUrlImage(route.car.image, \"cars\")}\n        />\n        {route.sellers.map(({ seller }, idx) => {\n          return (\n            <View key={seller.id} break wrap={false}>\n              <Text style={styles.subtitleLarge}>\n                <Link src={seller.linkUbicacion}>{`Punto ${idx + 1}`}</Link>\n              </Text>\n              <Subtitle>\n                {seller.nombre} - {seller.uuid}\n              </Subtitle>\n              <Image style={styles.image} src={createUrlImage(seller.image)} />\n              <Subtitle>Telefonos</Subtitle>\n              {!!seller.referencePhones.length ? (\n                <View style={{ flexDirection: \"column\" }}>\n                  {seller.referencePhones.map((telefono) => (\n                    <View\n                      style={{ flexDirection: \"row\", marginBottom: 4 }}\n                      key={telefono.id}\n                    >\n                      <Text style={{ marginHorizontal: 8 }}>•</Text>\n                      <Text style={{ fontSize: 12 }}>\n                        {telefono.name} - {telefono.phone}\n                      </Text>\n                    </View>\n                  ))}\n                </View>\n              ) : (\n                <View style={{ flexDirection: \"column\" }}>\n                  <View style={{ flexDirection: \"row\", marginBottom: 4 }}>\n                    <Text style={{ marginHorizontal: 8 }}>•</Text>\n                    <Text style={{ fontSize: 12 }}>Sin telefonos</Text>\n                  </View>\n                </View>\n              )}\n              <Subtitle>Referencias</Subtitle>\n              {!!seller.references.length ? (\n                <View style={{ flexDirection: \"column\" }}>\n                  {seller.references.map((referencia) => (\n                    <View key={referencia.id}>\n                      <View style={{ flexDirection: \"row\", marginBottom: 4 }}>\n                        <Text style={{ marginHorizontal: 8 }}>•</Text>\n                        <Text style={{ fontSize: 12 }}>\n                          {referencia.description} {referencia.link && ` - `}{\" \"}\n                          {referencia.link && (\n                            <Link src={referencia.link}>{\"Ubicacion\"}</Link>\n                          )}\n                        </Text>\n                      </View>\n                      {referencia.image && (\n                        <Image\n                          style={styles.imageRef}\n                          src={createUrlImage(referencia.image)}\n                        />\n                      )}\n                    </View>\n                  ))}\n                </View>\n              ) : (\n                <View style={{ flexDirection: \"column\" }}>\n                  <View style={{ flexDirection: \"row\", marginBottom: 4 }}>\n                    <Text style={{ marginHorizontal: 8 }}>•</Text>\n                    <Text style={{ fontSize: 12 }}>Sin referencias</Text>\n                  </View>\n                </View>\n              )}\n              {seller.personaQueAtiende && (\n                <>\n                  <Subtitle>Persona que atiende</Subtitle>\n                  <Text style={styles.text}>{seller.personaQueAtiende}</Text>\n                </>\n              )}\n              <Subtitle>Direccion</Subtitle>\n              <Text style={styles.text}>\n                {seller.calle} {seller.numero} {seller.colonia}, {seller.ciudad}\n                , {seller.cp} {seller.municipio}, {seller.estado}\n              </Text>\n            </View>\n          );\n        })}\n        <Text\n          style={styles.pageNumber}\n          render={({ pageNumber, totalPages }) =>\n            `${pageNumber} / ${totalPages}`\n          }\n          fixed\n        />\n      </Page>\n    </Document>\n  );\n};\n\nexport default PdfRoute;\n","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/FiltersOptsSellers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/FormSeller.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/TableSellers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/TabsSeller.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/DetailsSeller.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/DetailsTabsSeller.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/GeneralInfo.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/ListSucursales.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/ReferenciasInfo.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/TelefonosInfo.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/general/FormGeneral.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/EditReferencia.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/FormReferencias.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/TableReferencias.tsx",["328"],[],"import React from \"react\";\nimport { Column, Row, useTable } from \"react-table\";\nimport { DndProvider, useDrag, useDrop } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport update from \"immutability-helper\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { NewSeller, Referencia } from \"../FormSeller\";\nimport { useState, useCallback } from \"react\";\nimport { ButtonGroup, IconButton } from \"@mui/material\";\nimport Image from \"next/image\";\nimport { StyledTableCell, StyledTableRow } from \"../../ui\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport DragIndicatorIcon from \"@mui/icons-material/DragIndicator\";\nimport EditReferencia from \"./EditReferencia\";\nimport { Seller } from \"../../../ts/interfaces\";\nimport { createUrlImage } from \"../../../utils/images\";\n\ninterface PropsTable {\n  columns: Column<Referencia>[];\n  form: NewSeller;\n  setForm: (form: NewSeller) => void;\n}\n\nconst TableComponent = ({\n  columns,\n  form: data,\n  form: { referencias: records },\n  setForm: setRecords,\n}: PropsTable) => {\n  const getRowId = React.useCallback((row: Referencia) => {\n    return row.id;\n  }, []);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({\n      data: records,\n      columns,\n      getRowId,\n    });\n\n  const moveRow = (dragIndex: number, hoverIndex: number) => {\n    const dragRecord = records[dragIndex];\n    setRecords({\n      ...data,\n      referencias: update(records, {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, dragRecord],\n        ],\n      }).map((row, idx) => ({ ...row, order: idx + 1 })),\n    });\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Table {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map((headerGroup) => {\n            const { key, ...restHeaderGroupProps } =\n              headerGroup.getHeaderGroupProps();\n            return (\n              <StyledTableRow key={key} {...restHeaderGroupProps}>\n                <StyledTableCell></StyledTableCell>\n                {headerGroup.headers.map((column) => {\n                  const { key, ...restCellProps } = column.getHeaderProps();\n                  return (\n                    <StyledTableCell\n                      key={key}\n                      align=\"center\"\n                      {...restCellProps}\n                    >\n                      {column.render(\"Header\")}\n                    </StyledTableCell>\n                  );\n                })}\n              </StyledTableRow>\n            );\n          })}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map((row, index) => {\n            return (\n              (prepareRow(row) !== null && prepareRow(row)) || (\n                <Row\n                  index={index}\n                  row={row}\n                  moveRow={moveRow}\n                  {...row.getRowProps()}\n                />\n              )\n            );\n          })}\n        </TableBody>\n      </Table>\n    </DndProvider>\n  );\n};\n\nconst DND_ITEM_TYPE = \"row\";\n\ninterface PropsRow {\n  row: Row<Referencia>;\n  index: number;\n  moveRow: (dragIndex: number, hoverIndex: number) => void;\n}\n\nconst Row = ({ row, index, moveRow }: PropsRow) => {\n  const dropRef = React.useRef<HTMLTableRowElement>(null);\n  const dragRef = React.useRef<HTMLTableRowElement>(null);\n  const [, drop] = useDrop({\n    accept: DND_ITEM_TYPE,\n    hover(item: any, monitor) {\n      if (!dropRef.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      const hoverBoundingRect = dropRef.current.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset!.y - hoverBoundingRect.top;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      moveRow(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    },\n  });\n\n  const [{ isDragging }, drag, preview] = useDrag({\n    type: DND_ITEM_TYPE,\n    item: { type: DND_ITEM_TYPE, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const opacity = isDragging ? 0 : 1;\n\n  preview(drop(dropRef));\n  drag(dragRef);\n\n  return (\n    <StyledTableRow ref={dropRef} style={{ opacity }}>\n      <StyledTableCell align=\"center\" ref={dragRef}>\n        <DragIndicatorIcon />\n      </StyledTableCell>\n      {row.cells.map((cell) => {\n        const { key, ...restCellProps } = cell.getCellProps();\n        return (\n          <StyledTableCell key={key} align=\"center\" {...restCellProps}>\n            {cell.render(\"Cell\")}\n          </StyledTableCell>\n        );\n      })}\n    </StyledTableRow>\n  );\n};\n\ninterface Props {\n  form: NewSeller;\n  setForm: (form: NewSeller) => void;\n  sellerSelected: Seller;\n}\n\nconst TableReferencias = ({ form, setForm, sellerSelected }: Props) => {\n  const [refSelected, setRefSelected] = useState<Referencia>({} as Referencia);\n\n  const actionByRow = useCallback(\n    (type: string, id: string) => {\n      switch (type) {\n        case \"editRow\":\n          const referencia = form.referencias.find((ref) => ref.id === id);\n          if (referencia) {\n            setRefSelected(referencia);\n          }\n          break;\n        case \"deleteRow\":\n          const refNew = form.referencias\n            .filter((ref) => ref.id !== id)\n            .map((ref, idx) => ({ ...ref, order: idx + 1 }));\n          setForm({ ...form, referencias: refNew });\n          break;\n      }\n    },\n    [form.referencias]\n  );\n\n  const columns = React.useMemo<Column<Referencia>[]>(\n    () => [\n      {\n        Header: \"Orden\",\n        accessor: \"order\",\n      },\n      {\n        Header: \"Descripcion\",\n        accessor: \"description\",\n      },\n      {\n        Header: \"Ubicacion\",\n        accessor: \"linkUbicacion\",\n      },\n      {\n        Header: \"Imagen\",\n        accessor: \"image\",\n        Cell: (props) => {\n          if (props.value) {\n            return (\n              <Image\n                src={URL.createObjectURL(props.value)}\n                alt=\"\"\n                width={150}\n                height={150}\n              />\n            );\n          }\n\n          if (Object.keys(sellerSelected).length) {\n            const id = props.row.id;\n            const referenciaCurrent = sellerSelected.references.find(\n              (ref) => ref.id.toString() === id\n            );\n            if (referenciaCurrent && referenciaCurrent.image) {\n              return (\n                <Image\n                  src={createUrlImage(referenciaCurrent.image)}\n                  alt=\"\"\n                  width={150}\n                  height={150}\n                />\n              );\n            }\n          }\n          return null;\n        },\n      },\n      {\n        Header: \"Acciones\",\n        accessor: \"id\",\n        Cell: ({ value }) => {\n          return (\n            <ButtonGroup aria-label=\"outlined primary button group\">\n              <IconButton\n                color=\"warning\"\n                aria-label=\"update row\"\n                component=\"label\"\n                onClick={() => actionByRow(\"editRow\", value)}\n              >\n                <EditIcon />\n              </IconButton>\n              <IconButton\n                color=\"error\"\n                aria-label=\"delete row\"\n                component=\"label\"\n                onClick={() => actionByRow(\"deleteRow\", value)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ButtonGroup>\n          );\n        },\n      },\n    ],\n    [actionByRow, sellerSelected]\n  );\n\n  return (\n    <>\n      {!!Object.keys(refSelected).length && (\n        <EditReferencia\n          referencia={refSelected}\n          setRefSelected={setRefSelected}\n          form={form}\n          setForm={setForm}\n          sellerSelected={sellerSelected}\n        />\n      )}\n      <TableContainer>\n        <TableComponent columns={columns} form={form} setForm={setForm} />\n      </TableContainer>\n    </>\n  );\n};\n\nexport default TableReferencias;\n","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/EditReferenciaTelefonica.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/FormTelefonos.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/TableTelefonos.tsx",["329"],[],"import React from \"react\";\nimport { Column, Row, useTable } from \"react-table\";\nimport { DndProvider, useDrag, useDrop } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport update from \"immutability-helper\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { NewSeller, Telefono } from \"../FormSeller\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { ButtonGroup, IconButton } from \"@mui/material\";\nimport Image from \"next/image\";\nimport { StyledTableCell, StyledTableRow } from \"../../ui\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport DragIndicatorIcon from \"@mui/icons-material/DragIndicator\";\nimport EditReferenciaTelefonica from \"./EditReferenciaTelefonica\";\n\ninterface PropsTable {\n  columns: Column<Telefono>[];\n  form: NewSeller;\n  setForm: (form: NewSeller) => void;\n}\n\nconst TableComponent = ({\n  columns,\n  form: data,\n  form: { telefonos: records },\n  setForm: setRecords,\n}: PropsTable) => {\n  const getRowId = React.useCallback((row: Telefono) => {\n    return row.id;\n  }, []);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({\n      data: records,\n      columns,\n      getRowId,\n    });\n\n  const moveRow = (dragIndex: number, hoverIndex: number) => {\n    const dragRecord = records[dragIndex];\n    setRecords({\n      ...data,\n      telefonos: update(records, {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, dragRecord],\n        ],\n      }).map((row, idx) => ({ ...row, order: idx + 1 })),\n    });\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Table {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map((headerGroup) => {\n            const { key, ...restHeaderGroupProps } =\n              headerGroup.getHeaderGroupProps();\n            return (\n              <StyledTableRow key={key} {...restHeaderGroupProps}>\n                <StyledTableCell></StyledTableCell>\n                {headerGroup.headers.map((column) => {\n                  const { key, ...restCellProps } = column.getHeaderProps();\n                  return (\n                    <StyledTableCell\n                      key={key}\n                      align=\"center\"\n                      {...restCellProps}\n                    >\n                      {column.render(\"Header\")}\n                    </StyledTableCell>\n                  );\n                })}\n              </StyledTableRow>\n            );\n          })}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map((row, index) => {\n            return (\n              (prepareRow(row) !== null && prepareRow(row)) || (\n                <Row\n                  index={index}\n                  row={row}\n                  moveRow={moveRow}\n                  {...row.getRowProps()}\n                />\n              )\n            );\n          })}\n        </TableBody>\n      </Table>\n    </DndProvider>\n  );\n};\n\nconst DND_ITEM_TYPE = \"row\";\n\ninterface PropsRow {\n  row: Row<Telefono>;\n  index: number;\n  moveRow: (dragIndex: number, hoverIndex: number) => void;\n}\n\nconst Row = ({ row, index, moveRow }: PropsRow) => {\n  const dropRef = React.useRef<HTMLTableRowElement>(null);\n  const dragRef = React.useRef<HTMLTableRowElement>(null);\n  const [, drop] = useDrop({\n    accept: DND_ITEM_TYPE,\n    hover(item: any, monitor) {\n      if (!dropRef.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      const hoverBoundingRect = dropRef.current.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset!.y - hoverBoundingRect.top;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      moveRow(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    },\n  });\n\n  const [{ isDragging }, drag, preview] = useDrag({\n    type: DND_ITEM_TYPE,\n    item: { type: DND_ITEM_TYPE, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const opacity = isDragging ? 0 : 1;\n\n  preview(drop(dropRef));\n  drag(dragRef);\n\n  return (\n    <StyledTableRow ref={dropRef} style={{ opacity }}>\n      <StyledTableCell align=\"center\" ref={dragRef}>\n        <DragIndicatorIcon />\n      </StyledTableCell>\n      {row.cells.map((cell) => {\n        const { key, ...restCellProps } = cell.getCellProps();\n        return (\n          <StyledTableCell key={key} align=\"center\" {...restCellProps}>\n            {cell.render(\"Cell\")}\n          </StyledTableCell>\n        );\n      })}\n    </StyledTableRow>\n  );\n};\n\ninterface Props {\n  form: NewSeller;\n  setForm: (form: NewSeller) => void;\n}\n\nconst TableTelefonos = ({ form, setForm }: Props) => {\n  const [refSelected, setRefSelected] = useState<Telefono>({} as Telefono);\n\n  const actionByRow = useCallback(\n    (type: string, id: string) => {\n      switch (type) {\n        case \"editRow\":\n          const telefono = form.telefonos.find((ref) => ref.id === id);\n          if (telefono) {\n            setRefSelected(telefono);\n          }\n          break;\n        case \"deleteRow\":\n          const refNew = form.telefonos\n            .filter((ref) => ref.id !== id)\n            .map((ref, idx) => ({ ...ref, order: idx + 1 }));\n          setForm({ ...form, telefonos: refNew });\n          break;\n      }\n    },\n    [form.telefonos]\n  );\n\n  const columns = React.useMemo<Column<Telefono>[]>(\n    () => [\n      {\n        Header: \"Orden\",\n        accessor: \"order\",\n      },\n      {\n        Header: \"Nombre\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Telefono\",\n        accessor: \"phone\",\n      },\n      {\n        Header: \"Acciones\",\n        accessor: \"id\",\n        Cell: ({ value }) => {\n          return (\n            <ButtonGroup aria-label=\"outlined primary button group\">\n              <IconButton\n                color=\"warning\"\n                aria-label=\"update row\"\n                component=\"label\"\n                onClick={() => actionByRow(\"editRow\", value)}\n              >\n                <EditIcon />\n              </IconButton>\n              <IconButton\n                color=\"error\"\n                aria-label=\"delete row\"\n                component=\"label\"\n                onClick={() => actionByRow(\"deleteRow\", value)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ButtonGroup>\n          );\n        },\n      },\n    ],\n    [actionByRow]\n  );\n\n  return (\n    <>\n      {!!Object.keys(refSelected).length && (\n        <EditReferenciaTelefonica\n          telefono={refSelected}\n          setRefSelected={setRefSelected}\n          form={form}\n          setForm={setForm}\n        />\n      )}\n      <TableContainer>\n        <TableComponent columns={columns} form={form} setForm={setForm} />\n      </TableContainer>\n    </>\n  );\n};\n\nexport default TableTelefonos;\n","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/Copyright.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectCiudades.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectDrivers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectEstados.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectLogisticas.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectMunicipios.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectPlacas.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectSellers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectTypeUsers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/index.ts",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/tables/TableContainerCustom.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/tables/TableFooterCustom.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/tables/TableHeadCustom.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/tables/TablePaginationActions.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/tables/TableStyle.ts",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/tables/index.ts",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/users/FormUsers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/users/TableUsers.tsx",[],[],{"ruleId":"330","severity":1,"message":"331","line":44,"column":6,"nodeType":"332","endLine":44,"endColumn":15,"suggestions":"333"},{"ruleId":"330","severity":1,"message":"334","line":48,"column":6,"nodeType":"332","endLine":48,"endColumn":19,"suggestions":"335"},{"ruleId":null,"fatal":true,"severity":2,"message":"336","line":29,"column":0},{"ruleId":null,"fatal":true,"severity":2,"message":"336","line":29,"column":0},{"ruleId":null,"fatal":true,"severity":2,"message":"336","line":66,"column":0},{"ruleId":"337","severity":1,"message":"338","line":126,"column":9,"nodeType":"339","endLine":129,"endColumn":11},{"ruleId":"337","severity":1,"message":"338","line":139,"column":15,"nodeType":"339","endLine":139,"endColumn":80},{"ruleId":"337","severity":1,"message":"338","line":178,"column":25,"nodeType":"339","endLine":181,"endColumn":27},{"ruleId":"330","severity":1,"message":"340","line":197,"column":5,"nodeType":"332","endLine":197,"endColumn":23,"suggestions":"341"},{"ruleId":"330","severity":1,"message":"340","line":194,"column":5,"nodeType":"332","endLine":194,"endColumn":21,"suggestions":"342"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllRoutes'. Either include it or remove the dependency array.","ArrayExpression",["343"],"React Hook useEffect has a missing dependency: 'getSellers'. Either include it or remove the dependency array.",["344"],"Parsing error: Merge conflict marker encountered.","jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useCallback has missing dependencies: 'form' and 'setForm'. Either include them or remove the dependency array. If 'setForm' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["345"],["346"],{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"351","fix":"353"},"Update the dependencies array to be: [filters, getAllRoutes]",{"range":"354","text":"355"},"Update the dependencies array to be: [getSellers, querystring]",{"range":"356","text":"357"},"Update the dependencies array to be: [form, setForm]",{"range":"358","text":"359"},{"range":"360","text":"359"},[1523,1532],"[filters, getAllRoutes]",[1476,1489],"[getSellers, querystring]",[5948,5966],"[form, setForm]",[5802,5818]]