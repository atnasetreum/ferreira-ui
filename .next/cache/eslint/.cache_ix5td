[{"/home/eduardo/proyects/ferreira/ferreira-ui/pages/_app.tsx":"1","/home/eduardo/proyects/ferreira/ferreira-ui/pages/_document.tsx":"2","/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/Orders.tsx":"3","/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/Title.tsx":"4","/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/index.tsx":"5","/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/listItems.tsx":"6","/home/eduardo/proyects/ferreira/ferreira-ui/pages/index.tsx":"7","/home/eduardo/proyects/ferreira/ferreira-ui/pages/rutas/index.tsx":"8","/home/eduardo/proyects/ferreira/ferreira-ui/pages/sellers/index.tsx":"9","/home/eduardo/proyects/ferreira/ferreira-ui/pages/users/index.tsx":"10","/home/eduardo/proyects/ferreira/ferreira-ui/components/login/SelectUsers.tsx":"11","/home/eduardo/proyects/ferreira/ferreira-ui/components/login/index.ts":"12","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/FormSeller.tsx":"13","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/TableSellers.tsx":"14","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/TabsSeller.tsx":"15","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/Copyright.tsx":"16","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectCiudades.tsx":"17","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectEstados.tsx":"18","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectMunicipios.tsx":"19","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectSellers.tsx":"20","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/TableStyle.ts":"21","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/index.ts":"22","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/DetailsSeller.tsx":"23","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/DetailsTabsSeller.tsx":"24","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/GeneralInfo.tsx":"25","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/ListSucursales.tsx":"26","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/ReferenciasInfo.tsx":"27","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/TelefonosInfo.tsx":"28","/home/eduardo/proyects/ferreira/ferreira-ui/components/users/TableUsers.tsx":"29","/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FormRutas/FormRutas.tsx":"30","/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FormRutas/TablePuntos.tsx":"31","/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/TableRutas.tsx":"32","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/general/FiltersOptsSellers.tsx":"33","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/general/FormGeneral.tsx":"34","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/EditReferencia.tsx":"35","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/FormReferencias.tsx":"36","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/TableReferencias.tsx":"37","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/EditReferenciaTelefonica.tsx":"38","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/FormTelefonos.tsx":"39","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/TableTelefonos.tsx":"40","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectDrivers.tsx":"41","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectTypeUsers.tsx":"42","/home/eduardo/proyects/ferreira/ferreira-ui/components/users/FormUsers.tsx":"43","/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/pdf/PdfRoute.tsx":"44"},{"size":679,"mtime":1673055562388,"results":"45","hashOfConfig":"46"},{"size":390,"mtime":1671485171855,"results":"47","hashOfConfig":"46"},{"size":2354,"mtime":1672959812423,"results":"48","hashOfConfig":"46"},{"size":324,"mtime":1671485844609,"results":"49","hashOfConfig":"46"},{"size":1121,"mtime":1674144097260,"results":"50","hashOfConfig":"46"},{"size":2792,"mtime":1673387083519,"results":"51","hashOfConfig":"46"},{"size":3204,"mtime":1673531771179,"results":"52","hashOfConfig":"46"},{"size":1324,"mtime":1674780623780,"results":"53","hashOfConfig":"46"},{"size":3190,"mtime":1674571723119,"results":"54","hashOfConfig":"46"},{"size":1666,"mtime":1674157874730,"results":"55","hashOfConfig":"46"},{"size":1603,"mtime":1673531995136,"results":"56","hashOfConfig":"46"},{"size":31,"mtime":1673052518327,"results":"57","hashOfConfig":"46"},{"size":7378,"mtime":1674695015763,"results":"58","hashOfConfig":"46"},{"size":5104,"mtime":1674571764605,"results":"59","hashOfConfig":"46"},{"size":3113,"mtime":1674613602287,"results":"60","hashOfConfig":"46"},{"size":648,"mtime":1673052294848,"results":"61","hashOfConfig":"46"},{"size":1034,"mtime":1674242096985,"results":"62","hashOfConfig":"46"},{"size":774,"mtime":1674242059084,"results":"63","hashOfConfig":"46"},{"size":992,"mtime":1674242087069,"results":"64","hashOfConfig":"46"},{"size":1245,"mtime":1674684303314,"results":"65","hashOfConfig":"46"},{"size":659,"mtime":1673362825426,"results":"66","hashOfConfig":"46"},{"size":228,"mtime":1674269567320,"results":"67","hashOfConfig":"46"},{"size":2215,"mtime":1674089528028,"results":"68","hashOfConfig":"46"},{"size":3362,"mtime":1674101651960,"results":"69","hashOfConfig":"46"},{"size":4123,"mtime":1674610614372,"results":"70","hashOfConfig":"46"},{"size":1873,"mtime":1674169053689,"results":"71","hashOfConfig":"46"},{"size":1902,"mtime":1674169000888,"results":"72","hashOfConfig":"46"},{"size":1393,"mtime":1674089980065,"results":"73","hashOfConfig":"46"},{"size":2548,"mtime":1674157890858,"results":"74","hashOfConfig":"46"},{"size":4234,"mtime":1674700112913,"results":"75","hashOfConfig":"46"},{"size":6341,"mtime":1674762231845,"results":"76","hashOfConfig":"46"},{"size":5891,"mtime":1674765127974,"results":"77","hashOfConfig":"46"},{"size":3046,"mtime":1674566994950,"results":"78","hashOfConfig":"46"},{"size":7565,"mtime":1674613790246,"results":"79","hashOfConfig":"46"},{"size":4769,"mtime":1674613208308,"results":"80","hashOfConfig":"46"},{"size":3456,"mtime":1674612238806,"results":"81","hashOfConfig":"46"},{"size":8479,"mtime":1674690396770,"results":"82","hashOfConfig":"46"},{"size":2359,"mtime":1674567566801,"results":"83","hashOfConfig":"46"},{"size":2210,"mtime":1674567277041,"results":"84","hashOfConfig":"46"},{"size":7319,"mtime":1674690411499,"results":"85","hashOfConfig":"46"},{"size":977,"mtime":1674684938721,"results":"86","hashOfConfig":"46"},{"size":1066,"mtime":1674146074246,"results":"87","hashOfConfig":"46"},{"size":2747,"mtime":1674157236132,"results":"88","hashOfConfig":"46"},{"size":5612,"mtime":1674764594556,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q4euyy",{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},"/home/eduardo/proyects/ferreira/ferreira-ui/pages/_app.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/_document.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/Orders.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/Title.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/listItems.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/rutas/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/sellers/index.tsx",["226"],[],"import Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport FormSeller from \"../../components/sellers/FormSeller\";\nimport TableSellers from \"../../components/sellers/TableSellers\";\nimport MainLayout from \"../../layouts/MainLayout\";\nimport { useEffect, useState } from \"react\";\nimport { SellerApi } from \"../../utils/api\";\nimport { Seller } from \"../../ts/interfaces\";\nimport DetailsSeller from \"../../components/sellers/details/DetailsSeller\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport PersonAddAlt1Icon from \"@mui/icons-material/PersonAddAlt1\";\nimport { useFilters } from \"../../hooks\";\nimport FiltersOptsSellers from \"../../components/sellers/general/FiltersOptsSellers\";\n\nexport interface FiltersSellers {\n  id: string;\n  uuid: string;\n  nombre: string;\n  personaQueAtiende: string;\n  estado: string | null;\n  municipio: string | null;\n  ciudad: string | null;\n}\n\nconst filtersInit = {\n  id: \"\",\n  uuid: \"\",\n  nombre: \"\",\n  personaQueAtiende: \"\",\n  estado: null,\n  municipio: null,\n  ciudad: null,\n};\n\nfunction SellersPage() {\n  const [action, setAction] = useState<string>(\"\");\n  const [sellers, setSellers] = useState<Seller[]>([]);\n  const [sellerSelected, setSellerSelected] = useState<Seller>({} as Seller);\n  const { filters, setFilters, querystring } =\n    useFilters<FiltersSellers>(filtersInit);\n\n  const getSellers = () => {\n    SellerApi.getAll(querystring).then(setSellers);\n  };\n\n  useEffect(() => {\n    getSellers();\n  }, [querystring]);\n\n  return (\n    <MainLayout title=\"Sellers\">\n      {action === \"\" && (\n        <DetailsSeller\n          sellerSelected={sellerSelected}\n          setSellerSelected={setSellerSelected}\n        />\n      )}\n      <Grid container spacing={1}>\n        {action === \"\" && (\n          <Grid item xs={12} md={12} lg={12}>\n            <ButtonGroup\n              variant=\"contained\"\n              aria-label=\"outlined primary button group\"\n            >\n              <Button\n                startIcon={<PersonAddAlt1Icon />}\n                onClick={() => setAction(\"add\")}\n              >\n                Agregar\n              </Button>\n            </ButtonGroup>\n          </Grid>\n        )}\n        {[\"add\", \"edit\"].includes(action) && (\n          <Grid item xs={12} md={12} lg={12}>\n            <Paper sx={{ p: 2 }}>\n              <FormSeller\n                sellerSelected={sellerSelected}\n                getSellers={getSellers}\n                closeForm={() => {\n                  setSellerSelected({} as Seller);\n                  setAction(\"\");\n                }}\n              />\n            </Paper>\n          </Grid>\n        )}\n        {action === \"\" && (\n          <>\n            <Grid item xs={12} md={12} lg={12}>\n              <FiltersOptsSellers filters={filters} setFilters={setFilters} />\n            </Grid>\n            <Grid item xs={12} md={12} lg={12}>\n              <TableSellers\n                sellers={sellers}\n                setSellerSelected={setSellerSelected}\n                setAction={setAction}\n                getSellers={getSellers}\n              />\n            </Grid>\n          </>\n        )}\n      </Grid>\n    </MainLayout>\n  );\n}\n\nexport default SellersPage;\n","/home/eduardo/proyects/ferreira/ferreira-ui/pages/users/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/login/SelectUsers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/login/index.ts",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/FormSeller.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/TableSellers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/TabsSeller.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/Copyright.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectCiudades.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectEstados.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectMunicipios.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectSellers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/TableStyle.ts",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/index.ts",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/DetailsSeller.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/DetailsTabsSeller.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/GeneralInfo.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/ListSucursales.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/ReferenciasInfo.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/TelefonosInfo.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/users/TableUsers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FormRutas/FormRutas.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FormRutas/TablePuntos.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/TableRutas.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/general/FiltersOptsSellers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/general/FormGeneral.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/EditReferencia.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/FormReferencias.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/TableReferencias.tsx",["227"],[],"import React from \"react\";\nimport { Column, Row, useTable } from \"react-table\";\nimport { DndProvider, useDrag, useDrop } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport update from \"immutability-helper\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { NewSeller, Referencia } from \"../FormSeller\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { ButtonGroup, IconButton } from \"@mui/material\";\nimport Image from \"next/image\";\nimport { StyledTableCell, StyledTableRow } from \"../../ui\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport DragIndicatorIcon from \"@mui/icons-material/DragIndicator\";\nimport EditReferencia from \"./EditReferencia\";\nimport { Seller } from \"../../../ts/interfaces\";\nimport { createUrlImage } from \"../../../utils/images\";\n\ninterface PropsTable {\n  columns: Column<Referencia>[];\n  form: NewSeller;\n  setForm: (form: NewSeller) => void;\n}\n\nconst TableComponent = ({\n  columns,\n  form: data,\n  form: { referencias: records },\n  setForm: setRecords,\n}: PropsTable) => {\n  const getRowId = React.useCallback((row: Referencia) => {\n    return row.id;\n  }, []);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({\n      data: records,\n      columns,\n      getRowId,\n    });\n\n  const moveRow = (dragIndex: number, hoverIndex: number) => {\n    const dragRecord = records[dragIndex];\n    setRecords({\n      ...data,\n      referencias: update(records, {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, dragRecord],\n        ],\n      }).map((row, idx) => ({ ...row, order: idx + 1 })),\n    });\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Table {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map((headerGroup) => {\n            const { key, ...restHeaderGroupProps } =\n              headerGroup.getHeaderGroupProps();\n            return (\n              <StyledTableRow key={key} {...restHeaderGroupProps}>\n                <StyledTableCell></StyledTableCell>\n                {headerGroup.headers.map((column) => {\n                  const { key, ...restCellProps } = column.getHeaderProps();\n                  return (\n                    <StyledTableCell\n                      key={key}\n                      align=\"center\"\n                      {...restCellProps}\n                    >\n                      {column.render(\"Header\")}\n                    </StyledTableCell>\n                  );\n                })}\n              </StyledTableRow>\n            );\n          })}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map((row, index) => {\n            return (\n              (prepareRow(row) !== null && prepareRow(row)) || (\n                <Row\n                  index={index}\n                  row={row}\n                  moveRow={moveRow}\n                  {...row.getRowProps()}\n                />\n              )\n            );\n          })}\n        </TableBody>\n      </Table>\n    </DndProvider>\n  );\n};\n\nconst DND_ITEM_TYPE = \"row\";\n\ninterface PropsRow {\n  row: Row<Referencia>;\n  index: number;\n  moveRow: (dragIndex: number, hoverIndex: number) => void;\n}\n\nconst Row = ({ row, index, moveRow }: PropsRow) => {\n  const dropRef = React.useRef<HTMLTableRowElement>(null);\n  const dragRef = React.useRef<HTMLTableRowElement>(null);\n  const [, drop] = useDrop({\n    accept: DND_ITEM_TYPE,\n    hover(item: any, monitor) {\n      if (!dropRef.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      const hoverBoundingRect = dropRef.current.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset!.y - hoverBoundingRect.top;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      moveRow(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    },\n  });\n\n  const [{ isDragging }, drag, preview] = useDrag({\n    type: DND_ITEM_TYPE,\n    item: { type: DND_ITEM_TYPE, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const opacity = isDragging ? 0 : 1;\n\n  preview(drop(dropRef));\n  drag(dragRef);\n\n  return (\n    <StyledTableRow ref={dropRef} style={{ opacity }}>\n      <StyledTableCell align=\"center\" ref={dragRef}>\n        <DragIndicatorIcon />\n      </StyledTableCell>\n      {row.cells.map((cell) => {\n        const { key, ...restCellProps } = cell.getCellProps();\n        return (\n          <StyledTableCell key={key} align=\"center\" {...restCellProps}>\n            {cell.render(\"Cell\")}\n          </StyledTableCell>\n        );\n      })}\n    </StyledTableRow>\n  );\n};\n\ninterface Props {\n  form: NewSeller;\n  setForm: (form: NewSeller) => void;\n  sellerSelected: Seller;\n}\n\nconst TableReferencias = ({ form, setForm, sellerSelected }: Props) => {\n  const [refSelected, setRefSelected] = useState<Referencia>({} as Referencia);\n\n  const actionByRow = useCallback(\n    (type: string, id: string) => {\n      switch (type) {\n        case \"editRow\":\n          const referencia = form.referencias.find((ref) => ref.id === id);\n          if (referencia) {\n            setRefSelected(referencia);\n          }\n          break;\n        case \"deleteRow\":\n          const refNew = form.referencias\n            .filter((ref) => ref.id !== id)\n            .map((ref, idx) => ({ ...ref, order: idx + 1 }));\n          setForm({ ...form, referencias: refNew });\n          break;\n      }\n    },\n    [form.referencias]\n  );\n\n  const columns = React.useMemo<Column<Referencia>[]>(\n    () => [\n      {\n        Header: \"Orden\",\n        accessor: \"order\",\n      },\n      {\n        Header: \"Descripcion\",\n        accessor: \"description\",\n      },\n      {\n        Header: \"Ubicacion\",\n        accessor: \"linkUbicacion\",\n      },\n      {\n        Header: \"Imagen\",\n        accessor: \"image\",\n        Cell: (props) => {\n          if (props.value) {\n            return (\n              <Image\n                src={URL.createObjectURL(props.value)}\n                alt=\"\"\n                width={150}\n                height={150}\n              />\n            );\n          }\n\n          if (Object.keys(sellerSelected).length) {\n            const id = props.row.id;\n            const referenciaCurrent = sellerSelected.references.find(\n              (ref) => ref.id.toString() === id\n            );\n            if (referenciaCurrent && referenciaCurrent.image) {\n              return (\n                <Image\n                  src={createUrlImage(referenciaCurrent.image)}\n                  alt=\"\"\n                  width={150}\n                  height={150}\n                />\n              );\n            }\n          }\n          return null;\n        },\n      },\n      {\n        Header: \"Acciones\",\n        accessor: \"id\",\n        Cell: ({ value }) => {\n          return (\n            <ButtonGroup aria-label=\"outlined primary button group\">\n              <IconButton\n                color=\"warning\"\n                aria-label=\"update row\"\n                component=\"label\"\n                onClick={() => actionByRow(\"editRow\", value)}\n              >\n                <EditIcon />\n              </IconButton>\n              <IconButton\n                color=\"error\"\n                aria-label=\"delete row\"\n                component=\"label\"\n                onClick={() => actionByRow(\"deleteRow\", value)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ButtonGroup>\n          );\n        },\n      },\n    ],\n    [actionByRow, sellerSelected]\n  );\n\n  return (\n    <>\n      {!!Object.keys(refSelected).length && (\n        <EditReferencia\n          referencia={refSelected}\n          setRefSelected={setRefSelected}\n          form={form}\n          setForm={setForm}\n          sellerSelected={sellerSelected}\n        />\n      )}\n      <TableContainer>\n        <TableComponent columns={columns} form={form} setForm={setForm} />\n      </TableContainer>\n    </>\n  );\n};\n\nexport default TableReferencias;\n","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/EditReferenciaTelefonica.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/FormTelefonos.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/TableTelefonos.tsx",["228"],[],"import React from \"react\";\nimport { Column, Row, useTable } from \"react-table\";\nimport { DndProvider, useDrag, useDrop } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport update from \"immutability-helper\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { NewSeller, Telefono } from \"../FormSeller\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { ButtonGroup, IconButton } from \"@mui/material\";\nimport Image from \"next/image\";\nimport { StyledTableCell, StyledTableRow } from \"../../ui\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport DragIndicatorIcon from \"@mui/icons-material/DragIndicator\";\nimport EditReferenciaTelefonica from \"./EditReferenciaTelefonica\";\n\ninterface PropsTable {\n  columns: Column<Telefono>[];\n  form: NewSeller;\n  setForm: (form: NewSeller) => void;\n}\n\nconst TableComponent = ({\n  columns,\n  form: data,\n  form: { telefonos: records },\n  setForm: setRecords,\n}: PropsTable) => {\n  const getRowId = React.useCallback((row: Telefono) => {\n    return row.id;\n  }, []);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({\n      data: records,\n      columns,\n      getRowId,\n    });\n\n  const moveRow = (dragIndex: number, hoverIndex: number) => {\n    const dragRecord = records[dragIndex];\n    setRecords({\n      ...data,\n      telefonos: update(records, {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, dragRecord],\n        ],\n      }).map((row, idx) => ({ ...row, order: idx + 1 })),\n    });\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Table {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map((headerGroup) => {\n            const { key, ...restHeaderGroupProps } =\n              headerGroup.getHeaderGroupProps();\n            return (\n              <StyledTableRow key={key} {...restHeaderGroupProps}>\n                <StyledTableCell></StyledTableCell>\n                {headerGroup.headers.map((column) => {\n                  const { key, ...restCellProps } = column.getHeaderProps();\n                  return (\n                    <StyledTableCell\n                      key={key}\n                      align=\"center\"\n                      {...restCellProps}\n                    >\n                      {column.render(\"Header\")}\n                    </StyledTableCell>\n                  );\n                })}\n              </StyledTableRow>\n            );\n          })}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map((row, index) => {\n            return (\n              (prepareRow(row) !== null && prepareRow(row)) || (\n                <Row\n                  index={index}\n                  row={row}\n                  moveRow={moveRow}\n                  {...row.getRowProps()}\n                />\n              )\n            );\n          })}\n        </TableBody>\n      </Table>\n    </DndProvider>\n  );\n};\n\nconst DND_ITEM_TYPE = \"row\";\n\ninterface PropsRow {\n  row: Row<Telefono>;\n  index: number;\n  moveRow: (dragIndex: number, hoverIndex: number) => void;\n}\n\nconst Row = ({ row, index, moveRow }: PropsRow) => {\n  const dropRef = React.useRef<HTMLTableRowElement>(null);\n  const dragRef = React.useRef<HTMLTableRowElement>(null);\n  const [, drop] = useDrop({\n    accept: DND_ITEM_TYPE,\n    hover(item: any, monitor) {\n      if (!dropRef.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      const hoverBoundingRect = dropRef.current.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset!.y - hoverBoundingRect.top;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      moveRow(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    },\n  });\n\n  const [{ isDragging }, drag, preview] = useDrag({\n    type: DND_ITEM_TYPE,\n    item: { type: DND_ITEM_TYPE, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const opacity = isDragging ? 0 : 1;\n\n  preview(drop(dropRef));\n  drag(dragRef);\n\n  return (\n    <StyledTableRow ref={dropRef} style={{ opacity }}>\n      <StyledTableCell align=\"center\" ref={dragRef}>\n        <DragIndicatorIcon />\n      </StyledTableCell>\n      {row.cells.map((cell) => {\n        const { key, ...restCellProps } = cell.getCellProps();\n        return (\n          <StyledTableCell key={key} align=\"center\" {...restCellProps}>\n            {cell.render(\"Cell\")}\n          </StyledTableCell>\n        );\n      })}\n    </StyledTableRow>\n  );\n};\n\ninterface Props {\n  form: NewSeller;\n  setForm: (form: NewSeller) => void;\n}\n\nconst TableTelefonos = ({ form, setForm }: Props) => {\n  const [refSelected, setRefSelected] = useState<Telefono>({} as Telefono);\n\n  const actionByRow = useCallback(\n    (type: string, id: string) => {\n      switch (type) {\n        case \"editRow\":\n          const telefono = form.telefonos.find((ref) => ref.id === id);\n          if (telefono) {\n            setRefSelected(telefono);\n          }\n          break;\n        case \"deleteRow\":\n          const refNew = form.telefonos\n            .filter((ref) => ref.id !== id)\n            .map((ref, idx) => ({ ...ref, order: idx + 1 }));\n          setForm({ ...form, telefonos: refNew });\n          break;\n      }\n    },\n    [form.telefonos]\n  );\n\n  const columns = React.useMemo<Column<Telefono>[]>(\n    () => [\n      {\n        Header: \"Orden\",\n        accessor: \"order\",\n      },\n      {\n        Header: \"Nombre\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Telefono\",\n        accessor: \"phone\",\n      },\n      {\n        Header: \"Acciones\",\n        accessor: \"id\",\n        Cell: ({ value }) => {\n          return (\n            <ButtonGroup aria-label=\"outlined primary button group\">\n              <IconButton\n                color=\"warning\"\n                aria-label=\"update row\"\n                component=\"label\"\n                onClick={() => actionByRow(\"editRow\", value)}\n              >\n                <EditIcon />\n              </IconButton>\n              <IconButton\n                color=\"error\"\n                aria-label=\"delete row\"\n                component=\"label\"\n                onClick={() => actionByRow(\"deleteRow\", value)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ButtonGroup>\n          );\n        },\n      },\n    ],\n    [actionByRow]\n  );\n\n  return (\n    <>\n      {!!Object.keys(refSelected).length && (\n        <EditReferenciaTelefonica\n          telefono={refSelected}\n          setRefSelected={setRefSelected}\n          form={form}\n          setForm={setForm}\n        />\n      )}\n      <TableContainer>\n        <TableComponent columns={columns} form={form} setForm={setForm} />\n      </TableContainer>\n    </>\n  );\n};\n\nexport default TableTelefonos;\n","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectDrivers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectTypeUsers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/users/FormUsers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/pdf/PdfRoute.tsx",["229","230"],[],"import React from \"react\";\nimport {\n  Document,\n  Font,\n  Page,\n  Text,\n  Image,\n  StyleSheet,\n  Link,\n  View,\n} from \"@react-pdf/renderer\";\nimport { Route } from \"../../../ts/interfaces\";\nimport { formatDate } from \"../../../utils/dates\";\nimport { createUrlImage } from \"../../../utils/images\";\n\nconst styles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 65,\n    paddingHorizontal: 35,\n  },\n  title: {\n    fontSize: 18,\n    textAlign: \"center\",\n    fontFamily: \"Oswald\",\n  },\n  author: {\n    fontSize: 12,\n    textAlign: \"center\",\n    marginBottom: 20,\n  },\n  subtitle: {\n    fontSize: 15,\n    margin: 2,\n    fontFamily: \"Oswald\",\n  },\n  text: {\n    margin: 12,\n    fontSize: 14,\n    textAlign: \"justify\",\n    fontFamily: \"Times-Roman\",\n  },\n  image: {\n    marginHorizontal: 150,\n    width: 250,\n  },\n  imageRef: {\n    marginHorizontal: 50,\n    width: 100,\n  },\n  header: {\n    fontSize: 12,\n    marginBottom: 5,\n    textAlign: \"center\",\n    color: \"grey\",\n  },\n  pageNumber: {\n    position: \"absolute\",\n    fontSize: 12,\n    bottom: 30,\n    left: 0,\n    right: 0,\n    textAlign: \"center\",\n    color: \"grey\",\n  },\n  link: {\n    fontFamily: \"Lato\",\n    fontSize: 10,\n    color: \"black\",\n    textDecoration: \"none\",\n    alignSelf: \"flex-end\",\n    justifySelf: \"flex-end\",\n  },\n});\n\nFont.register({\n  family: \"Oswald\",\n  src: \"https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf\",\n});\n\nconst Subtitle = (props: any) => {\n  const { children, ...others } = props;\n  return (\n    <Text style={styles.subtitle} {...others}>\n      {children}\n    </Text>\n  );\n};\n\nconst PdfRoute = ({ route }: { route: Route }) => {\n  console.log({ route });\n  return (\n    <Document>\n      <Page style={styles.body} wrap>\n        <Text style={styles.header} fixed>\n          ~ Ruta ~\n        </Text>\n        <Text style={styles.header} fixed>\n          {route.user.name} - {formatDate(route.date)}\n        </Text>\n        {route.sellers.map((seller, idx) => {\n          return (\n            <div key={seller.id}>\n              <Subtitle break>\n                Punto {idx + 1}: {seller.nombre} -{\" \"}\n                <Link src={seller.linkUbicacion}>{\"Ubicacion\"}</Link>\n              </Subtitle>\n              <Image style={styles.image} src={createUrlImage(seller.image)} />\n              <Subtitle>Telefonos</Subtitle>\n              {!!seller.referencePhones.length ? (\n                <View style={{ flexDirection: \"column\" }}>\n                  {seller.referencePhones.map((telefono) => (\n                    <View\n                      style={{ flexDirection: \"row\", marginBottom: 4 }}\n                      key={telefono.id}\n                    >\n                      <Text style={{ marginHorizontal: 8 }}>•</Text>\n                      <Text style={{ fontSize: 12 }}>\n                        {telefono.name} - {telefono.phone}\n                      </Text>\n                    </View>\n                  ))}\n                </View>\n              ) : (\n                <View style={{ flexDirection: \"column\" }}>\n                  <View style={{ flexDirection: \"row\", marginBottom: 4 }}>\n                    <Text style={{ marginHorizontal: 8 }}>•</Text>\n                    <Text style={{ fontSize: 12 }}>Sin telefonos</Text>\n                  </View>\n                </View>\n              )}\n              <Subtitle>Referencias</Subtitle>\n              {!!seller.references.length ? (\n                <View style={{ flexDirection: \"column\" }}>\n                  {seller.references.map((referencia) => (\n                    <>\n                      <View\n                        style={{ flexDirection: \"row\", marginBottom: 4 }}\n                        key={referencia.id}\n                      >\n                        <Text style={{ marginHorizontal: 8 }}>•</Text>\n                        <Text style={{ fontSize: 12 }}>\n                          {referencia.description} {referencia.link && ` - `}{\" \"}\n                          {referencia.link && (\n                            <Link src={referencia.link}>{\"Ubicacion\"}</Link>\n                          )}\n                        </Text>\n                      </View>\n                      {referencia.image && (\n                        <Image\n                          style={styles.imageRef}\n                          src={createUrlImage(referencia.image)}\n                        />\n                      )}\n                    </>\n                  ))}\n                </View>\n              ) : (\n                <View style={{ flexDirection: \"column\" }}>\n                  <View style={{ flexDirection: \"row\", marginBottom: 4 }}>\n                    <Text style={{ marginHorizontal: 8 }}>•</Text>\n                    <Text style={{ fontSize: 12 }}>Sin referencias</Text>\n                  </View>\n                </View>\n              )}\n              {seller.personaQueAtiende && (\n                <>\n                  <Subtitle>Persona que atiende</Subtitle>\n                  <Text style={styles.text}>{seller.personaQueAtiende}</Text>\n                </>\n              )}\n\n              <Subtitle>Direccion</Subtitle>\n              <Text style={styles.text}>\n                {seller.calle} {seller.numero} {seller.colonia}, {seller.ciudad}\n                , {seller.cp} {seller.municipio}, {seller.estado}\n              </Text>\n            </div>\n          );\n        })}\n        <Text\n          style={styles.pageNumber}\n          render={({ pageNumber, totalPages }) =>\n            `${pageNumber} / ${totalPages}`\n          }\n          fixed\n        />\n      </Page>\n    </Document>\n  );\n};\n\nexport default PdfRoute;\n",{"ruleId":"231","severity":1,"message":"232","line":48,"column":6,"nodeType":"233","endLine":48,"endColumn":19,"suggestions":"234"},{"ruleId":"231","severity":1,"message":"235","line":197,"column":5,"nodeType":"233","endLine":197,"endColumn":23,"suggestions":"236"},{"ruleId":"231","severity":1,"message":"235","line":194,"column":5,"nodeType":"233","endLine":194,"endColumn":21,"suggestions":"237"},{"ruleId":"238","severity":1,"message":"239","line":108,"column":15,"nodeType":"240","endLine":108,"endColumn":80},{"ruleId":"238","severity":1,"message":"239","line":150,"column":25,"nodeType":"240","endLine":153,"endColumn":27},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSellers'. Either include it or remove the dependency array.","ArrayExpression",["241"],"React Hook useCallback has missing dependencies: 'form' and 'setForm'. Either include them or remove the dependency array. If 'setForm' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["242"],["243"],"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"246","fix":"248"},"Update the dependencies array to be: [getSellers, querystring]",{"range":"249","text":"250"},"Update the dependencies array to be: [form, setForm]",{"range":"251","text":"252"},{"range":"253","text":"252"},[1484,1497],"[getSellers, querystring]",[5959,5977],"[form, setForm]",[5802,5818]]