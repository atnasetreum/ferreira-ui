[{"/home/eduardo/proyects/ferreira/ferreira-ui/pages/_app.tsx":"1","/home/eduardo/proyects/ferreira/ferreira-ui/pages/_document.tsx":"2","/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/Orders.tsx":"3","/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/Title.tsx":"4","/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/index.tsx":"5","/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/listItems.tsx":"6","/home/eduardo/proyects/ferreira/ferreira-ui/pages/index.tsx":"7","/home/eduardo/proyects/ferreira/ferreira-ui/pages/rutas/index.tsx":"8","/home/eduardo/proyects/ferreira/ferreira-ui/pages/sellers/index.tsx":"9","/home/eduardo/proyects/ferreira/ferreira-ui/pages/users/index.tsx":"10","/home/eduardo/proyects/ferreira/ferreira-ui/components/login/SelectUsers.tsx":"11","/home/eduardo/proyects/ferreira/ferreira-ui/components/login/index.ts":"12","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/FormSeller.tsx":"13","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/TableSellers.tsx":"14","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/TabsSeller.tsx":"15","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/Copyright.tsx":"16","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectCiudades.tsx":"17","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectEstados.tsx":"18","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectMunicipios.tsx":"19","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectSellers.tsx":"20","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/TableStyle.ts":"21","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/index.ts":"22","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/DetailsSeller.tsx":"23","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/DetailsTabsSeller.tsx":"24","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/GeneralInfo.tsx":"25","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/ListSucursales.tsx":"26","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/ReferenciasInfo.tsx":"27","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/TelefonosInfo.tsx":"28","/home/eduardo/proyects/ferreira/ferreira-ui/components/users/TableUsers.tsx":"29","/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FormRutas/FormRutas.tsx":"30","/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FormRutas/TablePuntos.tsx":"31","/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/TableRutas.tsx":"32","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/general/FormGeneral.tsx":"33","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/EditReferencia.tsx":"34","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/FormReferencias.tsx":"35","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/TableReferencias.tsx":"36","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/EditReferenciaTelefonica.tsx":"37","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/FormTelefonos.tsx":"38","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/TableTelefonos.tsx":"39","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectDrivers.tsx":"40","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectTypeUsers.tsx":"41","/home/eduardo/proyects/ferreira/ferreira-ui/components/users/FormUsers.tsx":"42","/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/pdf/PdfRoute.tsx":"43","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/TablePaginationActions.tsx":"44","/home/eduardo/proyects/ferreira/ferreira-ui/pages/camionetas/index.tsx":"45","/home/eduardo/proyects/ferreira/ferreira-ui/pages/logisticas/index.tsx":"46","/home/eduardo/proyects/ferreira/ferreira-ui/components/camionetas/FormCamionetas.tsx":"47","/home/eduardo/proyects/ferreira/ferreira-ui/components/camionetas/TableCamionetas.tsx":"48","/home/eduardo/proyects/ferreira/ferreira-ui/components/logisticas/FormLogisticas.tsx":"49","/home/eduardo/proyects/ferreira/ferreira-ui/components/logisticas/TableLogisticas.tsx":"50","/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FiltersOptsRoutes.tsx":"51","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/FiltersOptsSellers.tsx":"52","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectLogisticas.tsx":"53","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectPlacas.tsx":"54","/home/eduardo/proyects/ferreira/ferreira-ui/pages/reportes/index.tsx":"55","/home/eduardo/proyects/ferreira/ferreira-ui/components/reportes/PdfReporte.tsx":"56","/home/eduardo/proyects/ferreira/ferreira-ui/components/reportes/TableReportes.tsx":"57"},{"size":679,"mtime":1673055562388,"results":"58","hashOfConfig":"59"},{"size":390,"mtime":1671485171855,"results":"60","hashOfConfig":"59"},{"size":2354,"mtime":1672959812423,"results":"61","hashOfConfig":"59"},{"size":324,"mtime":1671485844609,"results":"62","hashOfConfig":"59"},{"size":1121,"mtime":1674144097260,"results":"63","hashOfConfig":"59"},{"size":2792,"mtime":1673387083519,"results":"64","hashOfConfig":"59"},{"size":3204,"mtime":1673531771179,"results":"65","hashOfConfig":"59"},{"size":2328,"mtime":1675125996327,"results":"66","hashOfConfig":"59"},{"size":3182,"mtime":1675090976817,"results":"67","hashOfConfig":"59"},{"size":1666,"mtime":1674157874730,"results":"68","hashOfConfig":"59"},{"size":1603,"mtime":1673531995136,"results":"69","hashOfConfig":"59"},{"size":31,"mtime":1673052518327,"results":"70","hashOfConfig":"59"},{"size":7339,"mtime":1675137514082,"results":"71","hashOfConfig":"59"},{"size":6832,"mtime":1674914140171,"results":"72","hashOfConfig":"59"},{"size":3113,"mtime":1674912179448,"results":"73","hashOfConfig":"59"},{"size":648,"mtime":1673052294848,"results":"74","hashOfConfig":"59"},{"size":1034,"mtime":1674242096985,"results":"75","hashOfConfig":"59"},{"size":774,"mtime":1674242059084,"results":"76","hashOfConfig":"59"},{"size":992,"mtime":1674242087069,"results":"77","hashOfConfig":"59"},{"size":1245,"mtime":1674684303314,"results":"78","hashOfConfig":"59"},{"size":659,"mtime":1673362825426,"results":"79","hashOfConfig":"59"},{"size":338,"mtime":1675119530686,"results":"80","hashOfConfig":"59"},{"size":2215,"mtime":1674089528028,"results":"81","hashOfConfig":"59"},{"size":3193,"mtime":1674913030076,"results":"82","hashOfConfig":"59"},{"size":4123,"mtime":1674610614372,"results":"83","hashOfConfig":"59"},{"size":1873,"mtime":1674169053689,"results":"84","hashOfConfig":"59"},{"size":1902,"mtime":1674169000888,"results":"85","hashOfConfig":"59"},{"size":1393,"mtime":1674912769015,"results":"86","hashOfConfig":"59"},{"size":2548,"mtime":1674157890858,"results":"87","hashOfConfig":"59"},{"size":7204,"mtime":1675271718958,"results":"88","hashOfConfig":"59"},{"size":6341,"mtime":1674762231845,"results":"89","hashOfConfig":"59"},{"size":7948,"mtime":1675211370070,"results":"90","hashOfConfig":"59"},{"size":7513,"mtime":1675127467691,"results":"91","hashOfConfig":"59"},{"size":4769,"mtime":1674613208308,"results":"92","hashOfConfig":"59"},{"size":3456,"mtime":1674612238806,"results":"93","hashOfConfig":"59"},{"size":8468,"mtime":1675103202500,"results":"94","hashOfConfig":"59"},{"size":2359,"mtime":1674567566801,"results":"95","hashOfConfig":"59"},{"size":2210,"mtime":1674567277041,"results":"96","hashOfConfig":"59"},{"size":7319,"mtime":1674690411499,"results":"97","hashOfConfig":"59"},{"size":932,"mtime":1675090799177,"results":"98","hashOfConfig":"59"},{"size":1066,"mtime":1674146074246,"results":"99","hashOfConfig":"59"},{"size":2747,"mtime":1674157236132,"results":"100","hashOfConfig":"59"},{"size":6430,"mtime":1675274655038,"results":"101","hashOfConfig":"59"},{"size":2508,"mtime":1674913427797,"results":"102","hashOfConfig":"59"},{"size":2157,"mtime":1675108140222,"results":"103","hashOfConfig":"59"},{"size":2157,"mtime":1675107103401,"results":"104","hashOfConfig":"59"},{"size":5318,"mtime":1675137276822,"results":"105","hashOfConfig":"59"},{"size":3648,"mtime":1675118972214,"results":"106","hashOfConfig":"59"},{"size":3059,"mtime":1675137258925,"results":"107","hashOfConfig":"59"},{"size":3603,"mtime":1675108593443,"results":"108","hashOfConfig":"59"},{"size":2544,"mtime":1675126342313,"results":"109","hashOfConfig":"59"},{"size":3025,"mtime":1675091220278,"results":"110","hashOfConfig":"59"},{"size":957,"mtime":1675116914690,"results":"111","hashOfConfig":"59"},{"size":970,"mtime":1675125585772,"results":"112","hashOfConfig":"59"},{"size":4961,"mtime":1675217430681,"results":"113","hashOfConfig":"59"},{"size":4855,"mtime":1675218834740,"results":"114","hashOfConfig":"59"},{"size":4487,"mtime":1675215890617,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q4euyy",{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/eduardo/proyects/ferreira/ferreira-ui/pages/_app.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/_document.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/Orders.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/Title.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/listItems.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/rutas/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/sellers/index.tsx",["291"],[],"import Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport FormSeller from \"../../components/sellers/FormSeller\";\nimport TableSellers from \"../../components/sellers/TableSellers\";\nimport MainLayout from \"../../layouts/MainLayout\";\nimport { useEffect, useState } from \"react\";\nimport { SellerApi } from \"../../utils/api\";\nimport { Seller } from \"../../ts/interfaces\";\nimport DetailsSeller from \"../../components/sellers/details/DetailsSeller\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport PersonAddAlt1Icon from \"@mui/icons-material/PersonAddAlt1\";\nimport { useFilters } from \"../../hooks\";\nimport FiltersOptsSellers from \"../../components/sellers/FiltersOptsSellers\";\n\nexport interface FiltersSellers {\n  id: string;\n  uuid: string;\n  nombre: string;\n  personaQueAtiende: string;\n  estado: string | null;\n  municipio: string | null;\n  ciudad: string | null;\n}\n\nconst filtersInit = {\n  id: \"\",\n  uuid: \"\",\n  nombre: \"\",\n  personaQueAtiende: \"\",\n  estado: null,\n  municipio: null,\n  ciudad: null,\n};\n\nfunction SellersPage() {\n  const [action, setAction] = useState<string>(\"\");\n  const [sellers, setSellers] = useState<Seller[]>([]);\n  const [sellerSelected, setSellerSelected] = useState<Seller>({} as Seller);\n  const { filters, setFilters, querystring } =\n    useFilters<FiltersSellers>(filtersInit);\n\n  const getSellers = () => {\n    SellerApi.getAll(querystring).then(setSellers);\n  };\n\n  useEffect(() => {\n    getSellers();\n  }, [querystring]);\n\n  return (\n    <MainLayout title=\"Sellers\">\n      {action === \"\" && (\n        <DetailsSeller\n          sellerSelected={sellerSelected}\n          setSellerSelected={setSellerSelected}\n        />\n      )}\n      <Grid container spacing={1}>\n        {action === \"\" && (\n          <Grid item xs={12} md={12} lg={12}>\n            <ButtonGroup\n              variant=\"contained\"\n              aria-label=\"outlined primary button group\"\n            >\n              <Button\n                startIcon={<PersonAddAlt1Icon />}\n                onClick={() => setAction(\"add\")}\n              >\n                Agregar\n              </Button>\n            </ButtonGroup>\n          </Grid>\n        )}\n        {[\"add\", \"edit\"].includes(action) && (\n          <Grid item xs={12} md={12} lg={12}>\n            <Paper sx={{ p: 2 }}>\n              <FormSeller\n                sellerSelected={sellerSelected}\n                getSellers={getSellers}\n                closeForm={() => {\n                  setSellerSelected({} as Seller);\n                  setAction(\"\");\n                }}\n              />\n            </Paper>\n          </Grid>\n        )}\n        {action === \"\" && (\n          <>\n            <Grid item xs={12} md={12} lg={12}>\n              <FiltersOptsSellers filters={filters} setFilters={setFilters} />\n            </Grid>\n            <Grid item xs={12} md={12} lg={12}>\n              <TableSellers\n                sellers={sellers}\n                setSellerSelected={setSellerSelected}\n                setAction={setAction}\n                getSellers={getSellers}\n              />\n            </Grid>\n          </>\n        )}\n      </Grid>\n    </MainLayout>\n  );\n}\n\nexport default SellersPage;\n","/home/eduardo/proyects/ferreira/ferreira-ui/pages/users/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/login/SelectUsers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/login/index.ts",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/FormSeller.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/TableSellers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/TabsSeller.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/Copyright.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectCiudades.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectEstados.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectMunicipios.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectSellers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/TableStyle.ts",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/index.ts",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/DetailsSeller.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/DetailsTabsSeller.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/GeneralInfo.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/ListSucursales.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/ReferenciasInfo.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/TelefonosInfo.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/users/TableUsers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FormRutas/FormRutas.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FormRutas/TablePuntos.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/TableRutas.tsx",["292"],[],"import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport { StyledTableCell, StyledTableRow } from \"../ui\";\nimport { useEffect, useState } from \"react\";\nimport { RouteApi } from \"../../utils/api\";\nimport { Route } from \"../../ts/interfaces\";\nimport { formatDate, formatTimeStamp } from \"../../utils/dates\";\nimport Link from \"next/link\";\nimport PictureAsPdfIcon from \"@mui/icons-material/PictureAsPdf\";\nimport PdfRoute from \"./pdf/PdfRoute\";\nimport { ButtonGroup } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useNotify } from \"../../hooks\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport { saveAs } from \"file-saver\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { FiltersRoute } from \"../../pages/rutas\";\nimport { formatter } from \"../../utils/numbers\";\n\ninterface PropsRow {\n  setAction: (action: string) => void;\n  row: Route;\n  removeRoute: (id: number) => void;\n  setRouteSelected: (route: Route) => void;\n}\n\nfunction Row(props: PropsRow) {\n  const { row, removeRoute, setAction, setRouteSelected } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const createPdf = async (fileName: string) => {\n    const blob = await pdf(<PdfRoute route={row} />).toBlob();\n    saveAs(blob, fileName);\n  };\n\n  return (\n    <React.Fragment>\n      <StyledTableRow sx={{ \"& > *\": { borderBottom: \"unset\" } }}>\n        <StyledTableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n        <StyledTableCell component=\"th\" scope=\"row\">\n          {row.id}\n        </StyledTableCell>\n        <StyledTableCell>{row.car.logistica.name}</StyledTableCell>\n        <StyledTableCell>{row.car.placa}</StyledTableCell>\n        <StyledTableCell>{formatDate(row.date)}</StyledTableCell>\n        <StyledTableCell>{row.user.name}</StyledTableCell>\n        <StyledTableCell>{row.sellers.length}</StyledTableCell>\n        <StyledTableCell>{row.ciclo}</StyledTableCell>\n        <StyledTableCell>{formatter.format(Number(row.pago))}</StyledTableCell>\n        <StyledTableCell>{formatTimeStamp(row.createdAt)}</StyledTableCell>\n        <StyledTableCell>{formatTimeStamp(row.updatedAt)}</StyledTableCell>\n        <StyledTableCell align=\"center\">\n          <ButtonGroup aria-label=\"outlined primary button group\">\n            <IconButton\n              color=\"error\"\n              aria-label=\"delete row\"\n              component=\"label\"\n              onClick={() =>\n                createPdf(\n                  `${formatDate(row.date)} - ${row.user.name} - Ciclo ${\n                    row.ciclo\n                  }.pdf`\n                )\n              }\n            >\n              <PictureAsPdfIcon color=\"error\" />\n            </IconButton>\n            <IconButton\n              color=\"warning\"\n              aria-label=\"delete row\"\n              component=\"label\"\n              onClick={() => {\n                setRouteSelected(row);\n                setAction(\"edit\");\n              }}\n            >\n              <EditIcon />\n            </IconButton>\n            <IconButton\n              color=\"error\"\n              aria-label=\"delete row\"\n              component=\"label\"\n              onClick={() => removeRoute(row.id)}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </ButtonGroup>\n        </StyledTableCell>\n      </StyledTableRow>\n      <StyledTableRow>\n        <StyledTableCell\n          style={{ paddingBottom: 0, paddingTop: 0 }}\n          colSpan={12}\n        >\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 1 }}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Puntos\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <StyledTableRow>\n                    <StyledTableCell>Punto</StyledTableCell>\n                    <StyledTableCell>UUID</StyledTableCell>\n                    <StyledTableCell>NOMBRE</StyledTableCell>\n                    <StyledTableCell>UBICACION</StyledTableCell>\n                  </StyledTableRow>\n                </TableHead>\n                <TableBody>\n                  {row.sellers.map((seller, idx) => (\n                    <StyledTableRow key={seller.id}>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        {idx + 1}\n                      </StyledTableCell>\n                      <StyledTableCell>{seller.uuid}</StyledTableCell>\n                      <StyledTableCell>{seller.nombre}</StyledTableCell>\n                      <StyledTableCell>\n                        <Link href={seller.linkUbicacion} target=\"_blank\">\n                          {seller.linkUbicacion}\n                        </Link>\n                      </StyledTableCell>\n                    </StyledTableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </StyledTableCell>\n      </StyledTableRow>\n    </React.Fragment>\n  );\n}\n\ninterface Props {\n  setAction: (action: string) => void;\n  setRouteSelected: (route: Route) => void;\n  filters: FiltersRoute;\n}\n\nfunction TableRutas({ setAction, setRouteSelected, filters }: Props) {\n  const [routes, setRoutes] = useState<Route[]>([]);\n  const { notify } = useNotify();\n\n  const getAllRoutes = () =>\n    RouteApi.getAll({\n      ...(filters.id && { id: filters.id }),\n      ...(filters.date && { date: filters.date }),\n      ...(filters.driver && { driverId: filters.driver.id }),\n      ...(filters.placa && { carId: filters.placa.id }),\n      ...(filters.logistica && { logisticaId: filters.logistica.id }),\n    }).then(setRoutes);\n\n  const removeRoute = (id: number) => {\n    RouteApi.remove(id)\n      .then(() => {\n        getAllRoutes();\n        notify(\"Ruta eliminada correctamente\", \"success\");\n      })\n      .catch((err) => notify(err.response?.data?.message || err.message));\n  };\n\n  useEffect(() => {\n    getAllRoutes();\n  }, [filters]);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <StyledTableRow>\n            <StyledTableCell />\n            <StyledTableCell>ID</StyledTableCell>\n            <StyledTableCell>Logistica</StyledTableCell>\n            <StyledTableCell>Placa</StyledTableCell>\n            <StyledTableCell>Fecha de ruta</StyledTableCell>\n            <StyledTableCell>Driver</StyledTableCell>\n            <StyledTableCell>No. de puntos</StyledTableCell>\n            <StyledTableCell>Ciclo</StyledTableCell>\n            <StyledTableCell>Pago</StyledTableCell>\n            <StyledTableCell>Fecha Creacion</StyledTableCell>\n            <StyledTableCell>Ultima actualizacion</StyledTableCell>\n            <StyledTableCell align=\"center\">Acciones</StyledTableCell>\n          </StyledTableRow>\n        </TableHead>\n        <TableBody>\n          {routes.map((row) => (\n            <Row\n              key={row.id}\n              row={row}\n              removeRoute={removeRoute}\n              setAction={setAction}\n              setRouteSelected={setRouteSelected}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default TableRutas;\n","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/general/FormGeneral.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/EditReferencia.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/FormReferencias.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/TableReferencias.tsx",["293"],[],"import React from \"react\";\nimport { Column, Row, useTable } from \"react-table\";\nimport { DndProvider, useDrag, useDrop } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport update from \"immutability-helper\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { NewSeller, Referencia } from \"../FormSeller\";\nimport { useState, useCallback } from \"react\";\nimport { ButtonGroup, IconButton } from \"@mui/material\";\nimport Image from \"next/image\";\nimport { StyledTableCell, StyledTableRow } from \"../../ui\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport DragIndicatorIcon from \"@mui/icons-material/DragIndicator\";\nimport EditReferencia from \"./EditReferencia\";\nimport { Seller } from \"../../../ts/interfaces\";\nimport { createUrlImage } from \"../../../utils/images\";\n\ninterface PropsTable {\n  columns: Column<Referencia>[];\n  form: NewSeller;\n  setForm: (form: NewSeller) => void;\n}\n\nconst TableComponent = ({\n  columns,\n  form: data,\n  form: { referencias: records },\n  setForm: setRecords,\n}: PropsTable) => {\n  const getRowId = React.useCallback((row: Referencia) => {\n    return row.id;\n  }, []);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({\n      data: records,\n      columns,\n      getRowId,\n    });\n\n  const moveRow = (dragIndex: number, hoverIndex: number) => {\n    const dragRecord = records[dragIndex];\n    setRecords({\n      ...data,\n      referencias: update(records, {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, dragRecord],\n        ],\n      }).map((row, idx) => ({ ...row, order: idx + 1 })),\n    });\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Table {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map((headerGroup) => {\n            const { key, ...restHeaderGroupProps } =\n              headerGroup.getHeaderGroupProps();\n            return (\n              <StyledTableRow key={key} {...restHeaderGroupProps}>\n                <StyledTableCell></StyledTableCell>\n                {headerGroup.headers.map((column) => {\n                  const { key, ...restCellProps } = column.getHeaderProps();\n                  return (\n                    <StyledTableCell\n                      key={key}\n                      align=\"center\"\n                      {...restCellProps}\n                    >\n                      {column.render(\"Header\")}\n                    </StyledTableCell>\n                  );\n                })}\n              </StyledTableRow>\n            );\n          })}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map((row, index) => {\n            return (\n              (prepareRow(row) !== null && prepareRow(row)) || (\n                <Row\n                  index={index}\n                  row={row}\n                  moveRow={moveRow}\n                  {...row.getRowProps()}\n                />\n              )\n            );\n          })}\n        </TableBody>\n      </Table>\n    </DndProvider>\n  );\n};\n\nconst DND_ITEM_TYPE = \"row\";\n\ninterface PropsRow {\n  row: Row<Referencia>;\n  index: number;\n  moveRow: (dragIndex: number, hoverIndex: number) => void;\n}\n\nconst Row = ({ row, index, moveRow }: PropsRow) => {\n  const dropRef = React.useRef<HTMLTableRowElement>(null);\n  const dragRef = React.useRef<HTMLTableRowElement>(null);\n  const [, drop] = useDrop({\n    accept: DND_ITEM_TYPE,\n    hover(item: any, monitor) {\n      if (!dropRef.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      const hoverBoundingRect = dropRef.current.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset!.y - hoverBoundingRect.top;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      moveRow(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    },\n  });\n\n  const [{ isDragging }, drag, preview] = useDrag({\n    type: DND_ITEM_TYPE,\n    item: { type: DND_ITEM_TYPE, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const opacity = isDragging ? 0 : 1;\n\n  preview(drop(dropRef));\n  drag(dragRef);\n\n  return (\n    <StyledTableRow ref={dropRef} style={{ opacity }}>\n      <StyledTableCell align=\"center\" ref={dragRef}>\n        <DragIndicatorIcon />\n      </StyledTableCell>\n      {row.cells.map((cell) => {\n        const { key, ...restCellProps } = cell.getCellProps();\n        return (\n          <StyledTableCell key={key} align=\"center\" {...restCellProps}>\n            {cell.render(\"Cell\")}\n          </StyledTableCell>\n        );\n      })}\n    </StyledTableRow>\n  );\n};\n\ninterface Props {\n  form: NewSeller;\n  setForm: (form: NewSeller) => void;\n  sellerSelected: Seller;\n}\n\nconst TableReferencias = ({ form, setForm, sellerSelected }: Props) => {\n  const [refSelected, setRefSelected] = useState<Referencia>({} as Referencia);\n\n  const actionByRow = useCallback(\n    (type: string, id: string) => {\n      switch (type) {\n        case \"editRow\":\n          const referencia = form.referencias.find((ref) => ref.id === id);\n          if (referencia) {\n            setRefSelected(referencia);\n          }\n          break;\n        case \"deleteRow\":\n          const refNew = form.referencias\n            .filter((ref) => ref.id !== id)\n            .map((ref, idx) => ({ ...ref, order: idx + 1 }));\n          setForm({ ...form, referencias: refNew });\n          break;\n      }\n    },\n    [form.referencias]\n  );\n\n  const columns = React.useMemo<Column<Referencia>[]>(\n    () => [\n      {\n        Header: \"Orden\",\n        accessor: \"order\",\n      },\n      {\n        Header: \"Descripcion\",\n        accessor: \"description\",\n      },\n      {\n        Header: \"Ubicacion\",\n        accessor: \"linkUbicacion\",\n      },\n      {\n        Header: \"Imagen\",\n        accessor: \"image\",\n        Cell: (props) => {\n          if (props.value) {\n            return (\n              <Image\n                src={URL.createObjectURL(props.value)}\n                alt=\"\"\n                width={150}\n                height={150}\n              />\n            );\n          }\n\n          if (Object.keys(sellerSelected).length) {\n            const id = props.row.id;\n            const referenciaCurrent = sellerSelected.references.find(\n              (ref) => ref.id.toString() === id\n            );\n            if (referenciaCurrent && referenciaCurrent.image) {\n              return (\n                <Image\n                  src={createUrlImage(referenciaCurrent.image)}\n                  alt=\"\"\n                  width={150}\n                  height={150}\n                />\n              );\n            }\n          }\n          return null;\n        },\n      },\n      {\n        Header: \"Acciones\",\n        accessor: \"id\",\n        Cell: ({ value }) => {\n          return (\n            <ButtonGroup aria-label=\"outlined primary button group\">\n              <IconButton\n                color=\"warning\"\n                aria-label=\"update row\"\n                component=\"label\"\n                onClick={() => actionByRow(\"editRow\", value)}\n              >\n                <EditIcon />\n              </IconButton>\n              <IconButton\n                color=\"error\"\n                aria-label=\"delete row\"\n                component=\"label\"\n                onClick={() => actionByRow(\"deleteRow\", value)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ButtonGroup>\n          );\n        },\n      },\n    ],\n    [actionByRow, sellerSelected]\n  );\n\n  return (\n    <>\n      {!!Object.keys(refSelected).length && (\n        <EditReferencia\n          referencia={refSelected}\n          setRefSelected={setRefSelected}\n          form={form}\n          setForm={setForm}\n          sellerSelected={sellerSelected}\n        />\n      )}\n      <TableContainer>\n        <TableComponent columns={columns} form={form} setForm={setForm} />\n      </TableContainer>\n    </>\n  );\n};\n\nexport default TableReferencias;\n","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/EditReferenciaTelefonica.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/FormTelefonos.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/TableTelefonos.tsx",["294"],[],"import React from \"react\";\nimport { Column, Row, useTable } from \"react-table\";\nimport { DndProvider, useDrag, useDrop } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport update from \"immutability-helper\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { NewSeller, Telefono } from \"../FormSeller\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { ButtonGroup, IconButton } from \"@mui/material\";\nimport Image from \"next/image\";\nimport { StyledTableCell, StyledTableRow } from \"../../ui\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport DragIndicatorIcon from \"@mui/icons-material/DragIndicator\";\nimport EditReferenciaTelefonica from \"./EditReferenciaTelefonica\";\n\ninterface PropsTable {\n  columns: Column<Telefono>[];\n  form: NewSeller;\n  setForm: (form: NewSeller) => void;\n}\n\nconst TableComponent = ({\n  columns,\n  form: data,\n  form: { telefonos: records },\n  setForm: setRecords,\n}: PropsTable) => {\n  const getRowId = React.useCallback((row: Telefono) => {\n    return row.id;\n  }, []);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({\n      data: records,\n      columns,\n      getRowId,\n    });\n\n  const moveRow = (dragIndex: number, hoverIndex: number) => {\n    const dragRecord = records[dragIndex];\n    setRecords({\n      ...data,\n      telefonos: update(records, {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, dragRecord],\n        ],\n      }).map((row, idx) => ({ ...row, order: idx + 1 })),\n    });\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Table {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map((headerGroup) => {\n            const { key, ...restHeaderGroupProps } =\n              headerGroup.getHeaderGroupProps();\n            return (\n              <StyledTableRow key={key} {...restHeaderGroupProps}>\n                <StyledTableCell></StyledTableCell>\n                {headerGroup.headers.map((column) => {\n                  const { key, ...restCellProps } = column.getHeaderProps();\n                  return (\n                    <StyledTableCell\n                      key={key}\n                      align=\"center\"\n                      {...restCellProps}\n                    >\n                      {column.render(\"Header\")}\n                    </StyledTableCell>\n                  );\n                })}\n              </StyledTableRow>\n            );\n          })}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map((row, index) => {\n            return (\n              (prepareRow(row) !== null && prepareRow(row)) || (\n                <Row\n                  index={index}\n                  row={row}\n                  moveRow={moveRow}\n                  {...row.getRowProps()}\n                />\n              )\n            );\n          })}\n        </TableBody>\n      </Table>\n    </DndProvider>\n  );\n};\n\nconst DND_ITEM_TYPE = \"row\";\n\ninterface PropsRow {\n  row: Row<Telefono>;\n  index: number;\n  moveRow: (dragIndex: number, hoverIndex: number) => void;\n}\n\nconst Row = ({ row, index, moveRow }: PropsRow) => {\n  const dropRef = React.useRef<HTMLTableRowElement>(null);\n  const dragRef = React.useRef<HTMLTableRowElement>(null);\n  const [, drop] = useDrop({\n    accept: DND_ITEM_TYPE,\n    hover(item: any, monitor) {\n      if (!dropRef.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      const hoverBoundingRect = dropRef.current.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset!.y - hoverBoundingRect.top;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      moveRow(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    },\n  });\n\n  const [{ isDragging }, drag, preview] = useDrag({\n    type: DND_ITEM_TYPE,\n    item: { type: DND_ITEM_TYPE, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const opacity = isDragging ? 0 : 1;\n\n  preview(drop(dropRef));\n  drag(dragRef);\n\n  return (\n    <StyledTableRow ref={dropRef} style={{ opacity }}>\n      <StyledTableCell align=\"center\" ref={dragRef}>\n        <DragIndicatorIcon />\n      </StyledTableCell>\n      {row.cells.map((cell) => {\n        const { key, ...restCellProps } = cell.getCellProps();\n        return (\n          <StyledTableCell key={key} align=\"center\" {...restCellProps}>\n            {cell.render(\"Cell\")}\n          </StyledTableCell>\n        );\n      })}\n    </StyledTableRow>\n  );\n};\n\ninterface Props {\n  form: NewSeller;\n  setForm: (form: NewSeller) => void;\n}\n\nconst TableTelefonos = ({ form, setForm }: Props) => {\n  const [refSelected, setRefSelected] = useState<Telefono>({} as Telefono);\n\n  const actionByRow = useCallback(\n    (type: string, id: string) => {\n      switch (type) {\n        case \"editRow\":\n          const telefono = form.telefonos.find((ref) => ref.id === id);\n          if (telefono) {\n            setRefSelected(telefono);\n          }\n          break;\n        case \"deleteRow\":\n          const refNew = form.telefonos\n            .filter((ref) => ref.id !== id)\n            .map((ref, idx) => ({ ...ref, order: idx + 1 }));\n          setForm({ ...form, telefonos: refNew });\n          break;\n      }\n    },\n    [form.telefonos]\n  );\n\n  const columns = React.useMemo<Column<Telefono>[]>(\n    () => [\n      {\n        Header: \"Orden\",\n        accessor: \"order\",\n      },\n      {\n        Header: \"Nombre\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Telefono\",\n        accessor: \"phone\",\n      },\n      {\n        Header: \"Acciones\",\n        accessor: \"id\",\n        Cell: ({ value }) => {\n          return (\n            <ButtonGroup aria-label=\"outlined primary button group\">\n              <IconButton\n                color=\"warning\"\n                aria-label=\"update row\"\n                component=\"label\"\n                onClick={() => actionByRow(\"editRow\", value)}\n              >\n                <EditIcon />\n              </IconButton>\n              <IconButton\n                color=\"error\"\n                aria-label=\"delete row\"\n                component=\"label\"\n                onClick={() => actionByRow(\"deleteRow\", value)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ButtonGroup>\n          );\n        },\n      },\n    ],\n    [actionByRow]\n  );\n\n  return (\n    <>\n      {!!Object.keys(refSelected).length && (\n        <EditReferenciaTelefonica\n          telefono={refSelected}\n          setRefSelected={setRefSelected}\n          form={form}\n          setForm={setForm}\n        />\n      )}\n      <TableContainer>\n        <TableComponent columns={columns} form={form} setForm={setForm} />\n      </TableContainer>\n    </>\n  );\n};\n\nexport default TableTelefonos;\n","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectDrivers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectTypeUsers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/users/FormUsers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/pdf/PdfRoute.tsx",["295","296","297"],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/TablePaginationActions.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/camionetas/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/logisticas/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/camionetas/FormCamionetas.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/camionetas/TableCamionetas.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/logisticas/FormLogisticas.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/logisticas/TableLogisticas.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FiltersOptsRoutes.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/FiltersOptsSellers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectLogisticas.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectPlacas.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/reportes/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/reportes/PdfReporte.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/reportes/TableReportes.tsx",[],[],{"ruleId":"298","severity":1,"message":"299","line":48,"column":6,"nodeType":"300","endLine":48,"endColumn":19,"suggestions":"301"},{"ruleId":"298","severity":1,"message":"302","line":182,"column":6,"nodeType":"300","endLine":182,"endColumn":15,"suggestions":"303"},{"ruleId":"298","severity":1,"message":"304","line":197,"column":5,"nodeType":"300","endLine":197,"endColumn":23,"suggestions":"305"},{"ruleId":"298","severity":1,"message":"304","line":194,"column":5,"nodeType":"300","endLine":194,"endColumn":21,"suggestions":"306"},{"ruleId":"307","severity":1,"message":"308","line":115,"column":9,"nodeType":"309","endLine":118,"endColumn":11},{"ruleId":"307","severity":1,"message":"308","line":127,"column":15,"nodeType":"309","endLine":127,"endColumn":80},{"ruleId":"307","severity":1,"message":"308","line":166,"column":25,"nodeType":"309","endLine":169,"endColumn":27},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSellers'. Either include it or remove the dependency array.","ArrayExpression",["310"],"React Hook useEffect has a missing dependency: 'getAllRoutes'. Either include it or remove the dependency array.",["311"],"React Hook useCallback has missing dependencies: 'form' and 'setForm'. Either include them or remove the dependency array. If 'setForm' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["312"],["313"],"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"318","fix":"320"},"Update the dependencies array to be: [getSellers, querystring]",{"range":"321","text":"322"},"Update the dependencies array to be: [filters, getAllRoutes]",{"range":"323","text":"324"},"Update the dependencies array to be: [form, setForm]",{"range":"325","text":"326"},{"range":"327","text":"326"},[1476,1489],"[getSellers, querystring]",[6701,6710],"[filters, getAllRoutes]",[5948,5966],"[form, setForm]",[5802,5818]]