[{"/home/eduardo/proyects/ferreira/ferreira-ui/pages/_app.tsx":"1","/home/eduardo/proyects/ferreira/ferreira-ui/pages/_document.tsx":"2","/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/Orders.tsx":"3","/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/Title.tsx":"4","/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/index.tsx":"5","/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/listItems.tsx":"6","/home/eduardo/proyects/ferreira/ferreira-ui/pages/index.tsx":"7","/home/eduardo/proyects/ferreira/ferreira-ui/pages/rutas/index.tsx":"8","/home/eduardo/proyects/ferreira/ferreira-ui/pages/sellers/index.tsx":"9","/home/eduardo/proyects/ferreira/ferreira-ui/pages/users/index.tsx":"10","/home/eduardo/proyects/ferreira/ferreira-ui/components/login/SelectUsers.tsx":"11","/home/eduardo/proyects/ferreira/ferreira-ui/components/login/index.ts":"12","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/FormSeller.tsx":"13","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/TableSellers.tsx":"14","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/TabsSeller.tsx":"15","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/Copyright.tsx":"16","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectCiudades.tsx":"17","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectEstados.tsx":"18","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectMunicipios.tsx":"19","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectSellers.tsx":"20","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/TableStyle.ts":"21","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/index.ts":"22","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/DetailsSeller.tsx":"23","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/DetailsTabsSeller.tsx":"24","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/GeneralInfo.tsx":"25","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/ListSucursales.tsx":"26","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/ReferenciasInfo.tsx":"27","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/TelefonosInfo.tsx":"28","/home/eduardo/proyects/ferreira/ferreira-ui/components/users/TableUsers.tsx":"29","/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FormRutas/FormRutas.tsx":"30","/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FormRutas/TablePuntos.tsx":"31","/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/TableRutas.tsx":"32","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/general/FiltersOptsSellers.tsx":"33","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/general/FormGeneral.tsx":"34","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/EditReferencia.tsx":"35","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/FormReferencias.tsx":"36","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/TableReferencias.tsx":"37","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/EditReferenciaTelefonica.tsx":"38","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/FormTelefonos.tsx":"39","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/TableTelefonos.tsx":"40","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectDrivers.tsx":"41","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectTypeUsers.tsx":"42","/home/eduardo/proyects/ferreira/ferreira-ui/components/users/FormUsers.tsx":"43","/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/pdf/PdfRoute.tsx":"44","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/TablePaginationActions.tsx":"45"},{"size":679,"mtime":1673055562388,"results":"46","hashOfConfig":"47"},{"size":390,"mtime":1671485171855,"results":"48","hashOfConfig":"47"},{"size":2354,"mtime":1672959812423,"results":"49","hashOfConfig":"47"},{"size":324,"mtime":1671485844609,"results":"50","hashOfConfig":"47"},{"size":1121,"mtime":1674144097260,"results":"51","hashOfConfig":"47"},{"size":2792,"mtime":1673387083519,"results":"52","hashOfConfig":"47"},{"size":3204,"mtime":1673531771179,"results":"53","hashOfConfig":"47"},{"size":1661,"mtime":1675003269315,"results":"54","hashOfConfig":"47"},{"size":3190,"mtime":1674571723119,"results":"55","hashOfConfig":"47"},{"size":1666,"mtime":1674157874730,"results":"56","hashOfConfig":"47"},{"size":1603,"mtime":1673531995136,"results":"57","hashOfConfig":"47"},{"size":31,"mtime":1673052518327,"results":"58","hashOfConfig":"47"},{"size":7378,"mtime":1674695015763,"results":"59","hashOfConfig":"47"},{"size":6832,"mtime":1674914140171,"results":"60","hashOfConfig":"47"},{"size":3113,"mtime":1674912179448,"results":"61","hashOfConfig":"47"},{"size":648,"mtime":1673052294848,"results":"62","hashOfConfig":"47"},{"size":1034,"mtime":1674242096985,"results":"63","hashOfConfig":"47"},{"size":774,"mtime":1674242059084,"results":"64","hashOfConfig":"47"},{"size":992,"mtime":1674242087069,"results":"65","hashOfConfig":"47"},{"size":1245,"mtime":1674684303314,"results":"66","hashOfConfig":"47"},{"size":659,"mtime":1673362825426,"results":"67","hashOfConfig":"47"},{"size":270,"mtime":1674913435321,"results":"68","hashOfConfig":"47"},{"size":2215,"mtime":1674089528028,"results":"69","hashOfConfig":"47"},{"size":3193,"mtime":1674913030076,"results":"70","hashOfConfig":"47"},{"size":4123,"mtime":1674610614372,"results":"71","hashOfConfig":"47"},{"size":1873,"mtime":1674169053689,"results":"72","hashOfConfig":"47"},{"size":1902,"mtime":1674169000888,"results":"73","hashOfConfig":"47"},{"size":1393,"mtime":1674912769015,"results":"74","hashOfConfig":"47"},{"size":2548,"mtime":1674157890858,"results":"75","hashOfConfig":"47"},{"size":6106,"mtime":1675007079346,"results":"76","hashOfConfig":"47"},{"size":6341,"mtime":1674762231845,"results":"77","hashOfConfig":"47"},{"size":6936,"mtime":1675007224932,"results":"78","hashOfConfig":"47"},{"size":3046,"mtime":1674566994950,"results":"79","hashOfConfig":"47"},{"size":7565,"mtime":1674613790246,"results":"80","hashOfConfig":"47"},{"size":4769,"mtime":1674613208308,"results":"81","hashOfConfig":"47"},{"size":3456,"mtime":1674612238806,"results":"82","hashOfConfig":"47"},{"size":8479,"mtime":1674690396770,"results":"83","hashOfConfig":"47"},{"size":2359,"mtime":1674567566801,"results":"84","hashOfConfig":"47"},{"size":2210,"mtime":1674567277041,"results":"85","hashOfConfig":"47"},{"size":7319,"mtime":1674690411499,"results":"86","hashOfConfig":"47"},{"size":977,"mtime":1674684938721,"results":"87","hashOfConfig":"47"},{"size":1066,"mtime":1674146074246,"results":"88","hashOfConfig":"47"},{"size":2747,"mtime":1674157236132,"results":"89","hashOfConfig":"47"},{"size":6313,"mtime":1675002653417,"results":"90","hashOfConfig":"47"},{"size":2508,"mtime":1674913427797,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q4euyy",{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/eduardo/proyects/ferreira/ferreira-ui/pages/_app.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/_document.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/Orders.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/Title.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/dashboard/listItems.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/rutas/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/pages/sellers/index.tsx",["230"],[],"import Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport FormSeller from \"../../components/sellers/FormSeller\";\nimport TableSellers from \"../../components/sellers/TableSellers\";\nimport MainLayout from \"../../layouts/MainLayout\";\nimport { useEffect, useState } from \"react\";\nimport { SellerApi } from \"../../utils/api\";\nimport { Seller } from \"../../ts/interfaces\";\nimport DetailsSeller from \"../../components/sellers/details/DetailsSeller\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport PersonAddAlt1Icon from \"@mui/icons-material/PersonAddAlt1\";\nimport { useFilters } from \"../../hooks\";\nimport FiltersOptsSellers from \"../../components/sellers/general/FiltersOptsSellers\";\n\nexport interface FiltersSellers {\n  id: string;\n  uuid: string;\n  nombre: string;\n  personaQueAtiende: string;\n  estado: string | null;\n  municipio: string | null;\n  ciudad: string | null;\n}\n\nconst filtersInit = {\n  id: \"\",\n  uuid: \"\",\n  nombre: \"\",\n  personaQueAtiende: \"\",\n  estado: null,\n  municipio: null,\n  ciudad: null,\n};\n\nfunction SellersPage() {\n  const [action, setAction] = useState<string>(\"\");\n  const [sellers, setSellers] = useState<Seller[]>([]);\n  const [sellerSelected, setSellerSelected] = useState<Seller>({} as Seller);\n  const { filters, setFilters, querystring } =\n    useFilters<FiltersSellers>(filtersInit);\n\n  const getSellers = () => {\n    SellerApi.getAll(querystring).then(setSellers);\n  };\n\n  useEffect(() => {\n    getSellers();\n  }, [querystring]);\n\n  return (\n    <MainLayout title=\"Sellers\">\n      {action === \"\" && (\n        <DetailsSeller\n          sellerSelected={sellerSelected}\n          setSellerSelected={setSellerSelected}\n        />\n      )}\n      <Grid container spacing={1}>\n        {action === \"\" && (\n          <Grid item xs={12} md={12} lg={12}>\n            <ButtonGroup\n              variant=\"contained\"\n              aria-label=\"outlined primary button group\"\n            >\n              <Button\n                startIcon={<PersonAddAlt1Icon />}\n                onClick={() => setAction(\"add\")}\n              >\n                Agregar\n              </Button>\n            </ButtonGroup>\n          </Grid>\n        )}\n        {[\"add\", \"edit\"].includes(action) && (\n          <Grid item xs={12} md={12} lg={12}>\n            <Paper sx={{ p: 2 }}>\n              <FormSeller\n                sellerSelected={sellerSelected}\n                getSellers={getSellers}\n                closeForm={() => {\n                  setSellerSelected({} as Seller);\n                  setAction(\"\");\n                }}\n              />\n            </Paper>\n          </Grid>\n        )}\n        {action === \"\" && (\n          <>\n            <Grid item xs={12} md={12} lg={12}>\n              <FiltersOptsSellers filters={filters} setFilters={setFilters} />\n            </Grid>\n            <Grid item xs={12} md={12} lg={12}>\n              <TableSellers\n                sellers={sellers}\n                setSellerSelected={setSellerSelected}\n                setAction={setAction}\n                getSellers={getSellers}\n              />\n            </Grid>\n          </>\n        )}\n      </Grid>\n    </MainLayout>\n  );\n}\n\nexport default SellersPage;\n","/home/eduardo/proyects/ferreira/ferreira-ui/pages/users/index.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/login/SelectUsers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/login/index.ts",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/FormSeller.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/TableSellers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/TabsSeller.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/Copyright.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectCiudades.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectEstados.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectMunicipios.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectSellers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/TableStyle.ts",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/index.ts",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/DetailsSeller.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/DetailsTabsSeller.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/GeneralInfo.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/ListSucursales.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/ReferenciasInfo.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/details/TelefonosInfo.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/users/TableUsers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FormRutas/FormRutas.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/FormRutas/TablePuntos.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/TableRutas.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/general/FiltersOptsSellers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/general/FormGeneral.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/EditReferencia.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/FormReferencias.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referencias/TableReferencias.tsx",["231"],[],"import React from \"react\";\nimport { Column, Row, useTable } from \"react-table\";\nimport { DndProvider, useDrag, useDrop } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport update from \"immutability-helper\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { NewSeller, Referencia } from \"../FormSeller\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { ButtonGroup, IconButton } from \"@mui/material\";\nimport Image from \"next/image\";\nimport { StyledTableCell, StyledTableRow } from \"../../ui\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport DragIndicatorIcon from \"@mui/icons-material/DragIndicator\";\nimport EditReferencia from \"./EditReferencia\";\nimport { Seller } from \"../../../ts/interfaces\";\nimport { createUrlImage } from \"../../../utils/images\";\n\ninterface PropsTable {\n  columns: Column<Referencia>[];\n  form: NewSeller;\n  setForm: (form: NewSeller) => void;\n}\n\nconst TableComponent = ({\n  columns,\n  form: data,\n  form: { referencias: records },\n  setForm: setRecords,\n}: PropsTable) => {\n  const getRowId = React.useCallback((row: Referencia) => {\n    return row.id;\n  }, []);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({\n      data: records,\n      columns,\n      getRowId,\n    });\n\n  const moveRow = (dragIndex: number, hoverIndex: number) => {\n    const dragRecord = records[dragIndex];\n    setRecords({\n      ...data,\n      referencias: update(records, {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, dragRecord],\n        ],\n      }).map((row, idx) => ({ ...row, order: idx + 1 })),\n    });\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Table {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map((headerGroup) => {\n            const { key, ...restHeaderGroupProps } =\n              headerGroup.getHeaderGroupProps();\n            return (\n              <StyledTableRow key={key} {...restHeaderGroupProps}>\n                <StyledTableCell></StyledTableCell>\n                {headerGroup.headers.map((column) => {\n                  const { key, ...restCellProps } = column.getHeaderProps();\n                  return (\n                    <StyledTableCell\n                      key={key}\n                      align=\"center\"\n                      {...restCellProps}\n                    >\n                      {column.render(\"Header\")}\n                    </StyledTableCell>\n                  );\n                })}\n              </StyledTableRow>\n            );\n          })}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map((row, index) => {\n            return (\n              (prepareRow(row) !== null && prepareRow(row)) || (\n                <Row\n                  index={index}\n                  row={row}\n                  moveRow={moveRow}\n                  {...row.getRowProps()}\n                />\n              )\n            );\n          })}\n        </TableBody>\n      </Table>\n    </DndProvider>\n  );\n};\n\nconst DND_ITEM_TYPE = \"row\";\n\ninterface PropsRow {\n  row: Row<Referencia>;\n  index: number;\n  moveRow: (dragIndex: number, hoverIndex: number) => void;\n}\n\nconst Row = ({ row, index, moveRow }: PropsRow) => {\n  const dropRef = React.useRef<HTMLTableRowElement>(null);\n  const dragRef = React.useRef<HTMLTableRowElement>(null);\n  const [, drop] = useDrop({\n    accept: DND_ITEM_TYPE,\n    hover(item: any, monitor) {\n      if (!dropRef.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      const hoverBoundingRect = dropRef.current.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset!.y - hoverBoundingRect.top;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      moveRow(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    },\n  });\n\n  const [{ isDragging }, drag, preview] = useDrag({\n    type: DND_ITEM_TYPE,\n    item: { type: DND_ITEM_TYPE, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const opacity = isDragging ? 0 : 1;\n\n  preview(drop(dropRef));\n  drag(dragRef);\n\n  return (\n    <StyledTableRow ref={dropRef} style={{ opacity }}>\n      <StyledTableCell align=\"center\" ref={dragRef}>\n        <DragIndicatorIcon />\n      </StyledTableCell>\n      {row.cells.map((cell) => {\n        const { key, ...restCellProps } = cell.getCellProps();\n        return (\n          <StyledTableCell key={key} align=\"center\" {...restCellProps}>\n            {cell.render(\"Cell\")}\n          </StyledTableCell>\n        );\n      })}\n    </StyledTableRow>\n  );\n};\n\ninterface Props {\n  form: NewSeller;\n  setForm: (form: NewSeller) => void;\n  sellerSelected: Seller;\n}\n\nconst TableReferencias = ({ form, setForm, sellerSelected }: Props) => {\n  const [refSelected, setRefSelected] = useState<Referencia>({} as Referencia);\n\n  const actionByRow = useCallback(\n    (type: string, id: string) => {\n      switch (type) {\n        case \"editRow\":\n          const referencia = form.referencias.find((ref) => ref.id === id);\n          if (referencia) {\n            setRefSelected(referencia);\n          }\n          break;\n        case \"deleteRow\":\n          const refNew = form.referencias\n            .filter((ref) => ref.id !== id)\n            .map((ref, idx) => ({ ...ref, order: idx + 1 }));\n          setForm({ ...form, referencias: refNew });\n          break;\n      }\n    },\n    [form.referencias]\n  );\n\n  const columns = React.useMemo<Column<Referencia>[]>(\n    () => [\n      {\n        Header: \"Orden\",\n        accessor: \"order\",\n      },\n      {\n        Header: \"Descripcion\",\n        accessor: \"description\",\n      },\n      {\n        Header: \"Ubicacion\",\n        accessor: \"linkUbicacion\",\n      },\n      {\n        Header: \"Imagen\",\n        accessor: \"image\",\n        Cell: (props) => {\n          if (props.value) {\n            return (\n              <Image\n                src={URL.createObjectURL(props.value)}\n                alt=\"\"\n                width={150}\n                height={150}\n              />\n            );\n          }\n\n          if (Object.keys(sellerSelected).length) {\n            const id = props.row.id;\n            const referenciaCurrent = sellerSelected.references.find(\n              (ref) => ref.id.toString() === id\n            );\n            if (referenciaCurrent && referenciaCurrent.image) {\n              return (\n                <Image\n                  src={createUrlImage(referenciaCurrent.image)}\n                  alt=\"\"\n                  width={150}\n                  height={150}\n                />\n              );\n            }\n          }\n          return null;\n        },\n      },\n      {\n        Header: \"Acciones\",\n        accessor: \"id\",\n        Cell: ({ value }) => {\n          return (\n            <ButtonGroup aria-label=\"outlined primary button group\">\n              <IconButton\n                color=\"warning\"\n                aria-label=\"update row\"\n                component=\"label\"\n                onClick={() => actionByRow(\"editRow\", value)}\n              >\n                <EditIcon />\n              </IconButton>\n              <IconButton\n                color=\"error\"\n                aria-label=\"delete row\"\n                component=\"label\"\n                onClick={() => actionByRow(\"deleteRow\", value)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ButtonGroup>\n          );\n        },\n      },\n    ],\n    [actionByRow, sellerSelected]\n  );\n\n  return (\n    <>\n      {!!Object.keys(refSelected).length && (\n        <EditReferencia\n          referencia={refSelected}\n          setRefSelected={setRefSelected}\n          form={form}\n          setForm={setForm}\n          sellerSelected={sellerSelected}\n        />\n      )}\n      <TableContainer>\n        <TableComponent columns={columns} form={form} setForm={setForm} />\n      </TableContainer>\n    </>\n  );\n};\n\nexport default TableReferencias;\n","/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/EditReferenciaTelefonica.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/FormTelefonos.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/sellers/referenciasTelefonicas/TableTelefonos.tsx",["232"],[],"import React from \"react\";\nimport { Column, Row, useTable } from \"react-table\";\nimport { DndProvider, useDrag, useDrop } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport update from \"immutability-helper\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { NewSeller, Telefono } from \"../FormSeller\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { ButtonGroup, IconButton } from \"@mui/material\";\nimport Image from \"next/image\";\nimport { StyledTableCell, StyledTableRow } from \"../../ui\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport DragIndicatorIcon from \"@mui/icons-material/DragIndicator\";\nimport EditReferenciaTelefonica from \"./EditReferenciaTelefonica\";\n\ninterface PropsTable {\n  columns: Column<Telefono>[];\n  form: NewSeller;\n  setForm: (form: NewSeller) => void;\n}\n\nconst TableComponent = ({\n  columns,\n  form: data,\n  form: { telefonos: records },\n  setForm: setRecords,\n}: PropsTable) => {\n  const getRowId = React.useCallback((row: Telefono) => {\n    return row.id;\n  }, []);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({\n      data: records,\n      columns,\n      getRowId,\n    });\n\n  const moveRow = (dragIndex: number, hoverIndex: number) => {\n    const dragRecord = records[dragIndex];\n    setRecords({\n      ...data,\n      telefonos: update(records, {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, dragRecord],\n        ],\n      }).map((row, idx) => ({ ...row, order: idx + 1 })),\n    });\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Table {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map((headerGroup) => {\n            const { key, ...restHeaderGroupProps } =\n              headerGroup.getHeaderGroupProps();\n            return (\n              <StyledTableRow key={key} {...restHeaderGroupProps}>\n                <StyledTableCell></StyledTableCell>\n                {headerGroup.headers.map((column) => {\n                  const { key, ...restCellProps } = column.getHeaderProps();\n                  return (\n                    <StyledTableCell\n                      key={key}\n                      align=\"center\"\n                      {...restCellProps}\n                    >\n                      {column.render(\"Header\")}\n                    </StyledTableCell>\n                  );\n                })}\n              </StyledTableRow>\n            );\n          })}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map((row, index) => {\n            return (\n              (prepareRow(row) !== null && prepareRow(row)) || (\n                <Row\n                  index={index}\n                  row={row}\n                  moveRow={moveRow}\n                  {...row.getRowProps()}\n                />\n              )\n            );\n          })}\n        </TableBody>\n      </Table>\n    </DndProvider>\n  );\n};\n\nconst DND_ITEM_TYPE = \"row\";\n\ninterface PropsRow {\n  row: Row<Telefono>;\n  index: number;\n  moveRow: (dragIndex: number, hoverIndex: number) => void;\n}\n\nconst Row = ({ row, index, moveRow }: PropsRow) => {\n  const dropRef = React.useRef<HTMLTableRowElement>(null);\n  const dragRef = React.useRef<HTMLTableRowElement>(null);\n  const [, drop] = useDrop({\n    accept: DND_ITEM_TYPE,\n    hover(item: any, monitor) {\n      if (!dropRef.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      const hoverBoundingRect = dropRef.current.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset!.y - hoverBoundingRect.top;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      moveRow(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    },\n  });\n\n  const [{ isDragging }, drag, preview] = useDrag({\n    type: DND_ITEM_TYPE,\n    item: { type: DND_ITEM_TYPE, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const opacity = isDragging ? 0 : 1;\n\n  preview(drop(dropRef));\n  drag(dragRef);\n\n  return (\n    <StyledTableRow ref={dropRef} style={{ opacity }}>\n      <StyledTableCell align=\"center\" ref={dragRef}>\n        <DragIndicatorIcon />\n      </StyledTableCell>\n      {row.cells.map((cell) => {\n        const { key, ...restCellProps } = cell.getCellProps();\n        return (\n          <StyledTableCell key={key} align=\"center\" {...restCellProps}>\n            {cell.render(\"Cell\")}\n          </StyledTableCell>\n        );\n      })}\n    </StyledTableRow>\n  );\n};\n\ninterface Props {\n  form: NewSeller;\n  setForm: (form: NewSeller) => void;\n}\n\nconst TableTelefonos = ({ form, setForm }: Props) => {\n  const [refSelected, setRefSelected] = useState<Telefono>({} as Telefono);\n\n  const actionByRow = useCallback(\n    (type: string, id: string) => {\n      switch (type) {\n        case \"editRow\":\n          const telefono = form.telefonos.find((ref) => ref.id === id);\n          if (telefono) {\n            setRefSelected(telefono);\n          }\n          break;\n        case \"deleteRow\":\n          const refNew = form.telefonos\n            .filter((ref) => ref.id !== id)\n            .map((ref, idx) => ({ ...ref, order: idx + 1 }));\n          setForm({ ...form, telefonos: refNew });\n          break;\n      }\n    },\n    [form.telefonos]\n  );\n\n  const columns = React.useMemo<Column<Telefono>[]>(\n    () => [\n      {\n        Header: \"Orden\",\n        accessor: \"order\",\n      },\n      {\n        Header: \"Nombre\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Telefono\",\n        accessor: \"phone\",\n      },\n      {\n        Header: \"Acciones\",\n        accessor: \"id\",\n        Cell: ({ value }) => {\n          return (\n            <ButtonGroup aria-label=\"outlined primary button group\">\n              <IconButton\n                color=\"warning\"\n                aria-label=\"update row\"\n                component=\"label\"\n                onClick={() => actionByRow(\"editRow\", value)}\n              >\n                <EditIcon />\n              </IconButton>\n              <IconButton\n                color=\"error\"\n                aria-label=\"delete row\"\n                component=\"label\"\n                onClick={() => actionByRow(\"deleteRow\", value)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ButtonGroup>\n          );\n        },\n      },\n    ],\n    [actionByRow]\n  );\n\n  return (\n    <>\n      {!!Object.keys(refSelected).length && (\n        <EditReferenciaTelefonica\n          telefono={refSelected}\n          setRefSelected={setRefSelected}\n          form={form}\n          setForm={setForm}\n        />\n      )}\n      <TableContainer>\n        <TableComponent columns={columns} form={form} setForm={setForm} />\n      </TableContainer>\n    </>\n  );\n};\n\nexport default TableTelefonos;\n","/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectDrivers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/SelectTypeUsers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/users/FormUsers.tsx",[],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/rutas/pdf/PdfRoute.tsx",["233","234"],[],"/home/eduardo/proyects/ferreira/ferreira-ui/components/ui/TablePaginationActions.tsx",[],[],{"ruleId":"235","severity":1,"message":"236","line":48,"column":6,"nodeType":"237","endLine":48,"endColumn":19,"suggestions":"238"},{"ruleId":"235","severity":1,"message":"239","line":197,"column":5,"nodeType":"237","endLine":197,"endColumn":23,"suggestions":"240"},{"ruleId":"235","severity":1,"message":"239","line":194,"column":5,"nodeType":"237","endLine":194,"endColumn":21,"suggestions":"241"},{"ruleId":"242","severity":1,"message":"243","line":122,"column":15,"nodeType":"244","endLine":122,"endColumn":80},{"ruleId":"242","severity":1,"message":"243","line":161,"column":25,"nodeType":"244","endLine":164,"endColumn":27},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSellers'. Either include it or remove the dependency array.","ArrayExpression",["245"],"React Hook useCallback has missing dependencies: 'form' and 'setForm'. Either include them or remove the dependency array. If 'setForm' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["246"],["247"],"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"250","fix":"252"},"Update the dependencies array to be: [getSellers, querystring]",{"range":"253","text":"254"},"Update the dependencies array to be: [form, setForm]",{"range":"255","text":"256"},{"range":"257","text":"256"},[1484,1497],"[getSellers, querystring]",[5959,5977],"[form, setForm]",[5802,5818]]